@import "tailwindcss";

/* ===== 6ix base palette ===== */
:root {
  --bg: #0A0A0A;
  /* black */
  --text: #F3F4F6;
  /* white */
  --muted: #A3A3A3;
  /* gray */
  --gold: #E6C200;
  /* "earn" only */
}

html,
body {
  background: var(--bg);
  color: var(--text);
  font-family: Inter, system-ui, -apple-system, Segoe UI, Roboto, "Helvetica Neue", Arial;
}

/* ===== Glass card (3D bevel / water-ready) ===== */
.card,
.glass {
  border-radius: 16px;
  border: 1px solid rgba(255, 255, 255, 0.12);
  background: rgba(255, 255, 255, 0.06);
  -webkit-backdrop-filter: blur(14px);
  backdrop-filter: blur(14px);
  box-shadow:
    inset 0 1px 0 rgba(255, 255, 255, 0.08),
    0 10px 40px rgba(0, 0, 0, 0.35);
}

/* Water sheen pass */
.sheen {
  position: relative;
  overflow: hidden;
}

.sheen::after {
  content: "";
  position: absolute;
  inset: -20%;
  background: linear-gradient(105deg, transparent 40%, rgba(255, 255, 255, 0.20) 50%, transparent 60%);
  transform: translateX(-120%);
  transition: transform 900ms ease;
  isolation: isolate;
  contain: paint;
}

.sheen:hover::after {
  transform: translateX(120%);
}

/* Jelly hover */
@keyframes jelly {
  0% {
    transform: scale3d(1, 1, 1);
  }

  30% {
    transform: scale3d(1.07, 0.93, 1);
  }

  45% {
    transform: scale3d(0.96, 1.05, 1);
  }

  60% {
    transform: scale3d(1.02, 0.98, 1);
  }

  100% {
    transform: scale3d(1, 1, 1);
  }
}

.jelly:hover {
  animation: jelly 600ms cubic-bezier(.22, 1, .36, 1);
}

/* White 3D button → turns black on hover */
.btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: .5rem;
  padding: .8rem 1.1rem;
  border-radius: 14px;
  font-weight: 600;
  user-select: none;
  transition: transform .15s ease, background .15s ease, color .15s ease, border-color .15s ease;
}

.btn:hover {
  transform: translateY(-1px);
}

.btn-ghost {
  /* glassy ghost */
  border: 1px solid rgba(255, 255, 255, 0.12);
  background: rgba(255, 255, 255, 0.06);
  -webkit-backdrop-filter: blur(14px);
  backdrop-filter: blur(14px);
}

.btn-white {
  /* solid white */
  color: #000;
  background: #fff;
  border: 1px solid rgba(255, 255, 255, 0.2);
  box-shadow:
    inset 0 1px 0 rgba(255, 255, 255, 0.9),
    0 8px 20px rgba(255, 255, 255, 0.06),
    0 2px 0 rgba(255, 255, 255, 0.15);
}


/* Layout helper */
.container {
  width: 100%;
  max-width: 64rem;
  margin-inline: auto;
  padding-inline: 1.25rem;
}

/* Auto water sheen for splash (2s, back-and-forth) */
/* Slow dragon-blink water sheen for splash */
.sheen-auto {
  position: relative;
  overflow: hidden;
}

.sheen-auto::after {
  content: "";
  position: absolute;
  inset: -8%;
  background: linear-gradient(105deg, transparent 40%, rgba(255, 255, 255, 0.22) 50%, transparent 60%);
  transform: translateX(-140%);
  opacity: 0;
  animation: sheenBlink 7000ms cubic-bezier(.22, 0, .36, 0) infinite;
  isolation: isolate;
  contain: paint;
}

@keyframes sheenBlink {
  0% {
    transform: translateX(-140%);
    opacity: 0;
  }

  15% {
    opacity: .25;
  }

  50% {
    transform: translateX(140%);
    opacity: .25;
  }

  65% {
    opacity: 0;
  }

  100% {
    transform: translateX(-140%);
    opacity: 0;
  }
}

/* compact size for the corner CTA */
.btn-sm {
  padding: .45rem .60rem;
  border-radius: .8rem;
  font-size: .9rem;
  gap: .4rem;
}

.btn-lg {
  padding: .9rem 1.25rem;
  border-radius: 1.25rem;
  font-size: 1rem;
  gap: .55rem;
}

/* Water sheen running on MOBILE only (for "Why 6ix?" pills) */
.water-mobile {
  position: relative;
  overflow: hidden;
  isolation: isolate;
}

@media (max-width:639px) {
  .water-mobile::after {
    content: "";
    position: absolute;
    inset: -15%;
    background: linear-gradient(105deg, transparent 40%, rgba(255, 255, 255, .22) 50%, transparent 60%);
    animation: sheenBlink 2200ms cubic-bezier(.22, 1, .36, 1) infinite;
    opacity: .25;
  }
}

/* Muted legal links (no buttons) */
.link-muted {
  color: rgb(161 161 170);
  text-decoration: none;
}

.link-muted:hover {
  color: rgb(212 212 216);
  text-decoration: underline;
}

/* ===== Mobile water scroll effect ===== */
.waterfx-mobile {
  position: fixed;
  inset: 0;
  z-index: 10;
  pointer-events: none;
  opacity: .35;
  mix-blend-mode: screen;
  backdrop-filter: saturate(120%) blur(.5px);
  /* three soft highlights that drift with scroll */
  background:
    radial-gradient(120px 80px at 20% calc(10% + var(--y, 0px)), rgba(255, 255, 255, .08), transparent 60%),
    radial-gradient(140px 100px at 80% calc(30% + var(--y, 0px)), rgba(255, 255, 255, .06), transparent 65%),
    radial-gradient(100px 70px at 50% calc(70% + var(--y, 0px)), rgba(255, 255, 255, .05), transparent 70%);
}

@media (min-width:640px) {
  .waterfx-mobile {
    display: none;
  }
}

html,
body {

  -webkit-tap-highlight-color: transparent;
}

.smooth-scroll {
  scroll-behavior: smooth;
}

/* ===================================== */

/* Edge-to-edge helper (apply to any block to span full width neatly) */
.edge {
  width: 100%;
  max-width: none;
  padding-left: max(1rem, env(safe-area-inset-left));
  padding-right: max(1rem, env(safe-area-inset-right));
}

@media (min-width:1024px) {
  .edge {
    padding-left: 4rem;
    padding-right: 4rem;
  }
}

/* Crisp fonts everywhere */
html,
body {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* Desktop: lock page height & hide scroll; mobile keeps normal scroll */
@media (min-width: 768px) {
  .no-scroll-desktop {
    height: 100dvh;
    overflow: hidden;
  }
}

/* “IX” next to the 6 — black fill with white stroke */
.logo-ix {
  color: #000;
  /* black fill */
  font-weight: 900;
  line-height: 1;
  letter-spacing: .5px;
}

@supports (-webkit-text-stroke: 1px white) {
  .logo-ix {
    -webkit-text-stroke: 2px #fff;
  }

  /* white outline */
}

/* Smooth/Sharper text */
html,
body {
  height: 100%;
}

body {
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* Desktop: no scroll; mobile can scroll */
@media (min-width: 640px) {
  body {
    overflow: hidden;
  }
}

/* Brand position + IX dim */
:root {
  --brand-x: 16px;
  /* left offset for the 6+IX cluster */
  --brand-y: 16px;
  /* top offset for the 6+IX cluster */
  --ix-opacity: .72;
  /* dim IX to blend with logo */
}

/* If you don't already have this utility */
.container {
  max-width: 1120px;
  margin-left: auto;
  margin-right: auto;
  padding-left: 1rem;
  padding-right: 1rem;
}

/* === Normalize water + sheen animation speeds on mobile === */
:root {
  /* pick the speeds you like (desktop + mobile will share these) */
  --ripple-speed: 18s;
  /* water ripple */
  --sheen-speed: 10s;
  /* glass sheen pass */
}

/* make both desktop and mobile use the same (slow) speeds */
.water-mobile,
.water {
  animation-duration: var(--ripple-speed) !important;
}

/* if your sheen runs separately, slow it too */
.sheen,
.sheen-auto {
  animation-duration: var(--sheen-speed) !important;
}

/* optional: if you ONLY want to slow on small screens */
@media (max-width: 767px) {
  .water-mobile {
    animation-duration: var(--ripple-speed) !important;
  }

  .sheen,
  .sheen-auto {
    animation-duration: var(--sheen-speed) !important;
  }
}

/* ===== Unify animation speeds (mobile) ===== */
:root {
  /* tune these to taste */
  --ripple-speed: 18s;
  /* water ripple */
  --sheen-speed: 12s;
  /* glass sheen */
}

/* iOS/phone targets */
@media (max-width: 767px) {

  /* Ripple: cover element + pseudo-elements + extra specificity */
  .water-mobile,
  .water-mobile::before,
  .water-mobile::after,
  .water-mobile.water-mobile {
    -webkit-animation-duration: var(--ripple-speed) !important;
    animation-duration: var(--ripple-speed) !important;
    -webkit-animation-iteration-count: infinite !important;
    animation-iteration-count: infinite !important;
  }

  /* Sheen: same idea */
  .sheen,
  .sheen-auto,
  .sheen::before,
  .sheen::after,
  .sheen-auto::before,
  .sheen-auto::after {
    -webkit-animation-duration: var(--sheen-speed) !important;
    animation-duration: var(--sheen-speed) !important;
  }
}

/* Extra iOS nudge if needed (Safari quirk target) */
@supports (-webkit-touch-callout: none) {

  .water-mobile,
  .water-mobile::before,
  .water-mobile::after {
    -webkit-animation-duration: var(--ripple-speed) !important;
    animation-duration: var(--ripple-speed) !important;
  }
}

/* --- Universal button primitives --- */
.btn {
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  gap: .5rem;
  padding: .625rem 1rem;
  /* 10px 16px */
  border-radius: 9999px;
  border: 1px solid transparent;
  font-weight: 600;
  user-select: none;
  cursor: pointer;
  transition: background .25s ease, color .25s ease, transform .12s ease, box-shadow .25s ease;
}

.btn:disabled {
  opacity: .6;
  cursor: not-allowed;
}

.btn-outline {
  background: rgba(255, 255, 255, .05);
  color: rgba(255, 255, 255, .85);
  border-color: rgba(255, 255, 255, .15);
}



/* Optional “water/jelly” sheen on hover */
@media (hover:hover) and (pointer:fine) {
  .btn-water {
    overflow: hidden;
  }

  .btn-water::after {
    content: "";
    position: absolute;
    inset: -150% -50% auto -50%;
    height: 300%;
    transform: translateY(60%) rotate(8deg);
    background:
      radial-gradient(180px 120px at 50% 40%, rgba(255, 255, 255, .12), transparent 60%),
      radial-gradient(220px 160px at 50% 60%, rgba(255, 255, 255, .06), transparent 70%);
    opacity: 0;
    transition: opacity .35s ease, transform .45s ease;
    pointer-events: none;
  }

  .btn-water:hover::after {
    opacity: 1;
    transform: translateY(30%) rotate(8deg);
  }
}

/* Water reflection overlay */
.abs-water-lines,
.abs-water-gloss {
  position: absolute;
  inset: -20%;
  border-radius: inherit;
  pointer-events: none;
}

.abs-water-lines {
  /* faint diagonal ripples drifting slowly */
  background: repeating-linear-gradient(-25deg,
      rgba(255, 255, 255, .055) 0 2px,
      rgba(255, 255, 255, 0) 2px 10px);
  mix-blend-mode: soft-light;
  opacity: .22;
  animation: waterDrift 18s linear infinite;
}

.abs-water-gloss {
  /* wide soft highlight sweeping across */
  top: -25%;
  bottom: -25%;
  left: -45%;
  right: auto;
  width: 48%;
  background: linear-gradient(90deg,
      rgba(255, 255, 255, 0) 0%,
      rgba(255, 255, 255, .08) 35%,
      rgba(255, 255, 255, .16) 50%,
      rgba(255, 255, 255, .08) 65%,
      rgba(255, 255, 255, 0) 100%);
  filter: blur(6px);
  mix-blend-mode: screen;
  opacity: .45;
  transform: rotate(8deg) translateX(-140%);
  animation: waterSweep 14s linear infinite;
}

@keyframes waterDrift {
  from {
    background-position: 0 0;
  }

  to {
    background-position: 420px 0;
  }

  /* slooow */
}

@keyframes waterSweep {
  from {
    transform: rotate(8deg) translateX(-140%);
  }

  to {
    transform: rotate(8deg) translateX(220%);
  }
}

/* Respect users who prefer less motion */
@media (prefers-reduced-motion: reduce) {

  .abs-water-lines,
  .abs-water-gloss {
    animation: none;
    opacity: .12;
  }
}

/* 3-D pressable button effect */
.btn-3d {
  transform: translateY(0);
  box-shadow: 0 8px 0 rgba(0, 0, 0, .35), 0 18px 40px rgba(0, 0, 0, .35);
  transition: transform .08s ease, box-shadow .08s ease;
}

.btn-3d:hover {
  transform: translateY(-1px);
  box-shadow: 0 10px 0 rgba(0, 0, 0, .35), 0 24px 50px rgba(0, 0, 0, .45);
}

.btn-3d:active {
  transform: translateY(2px);
  box-shadow: 0 6px 0 rgba(0, 0, 0, .35), 0 12px 24px rgba(0, 0, 0, .35);
}

/* Reserve room for the fixed dock across the app */
.has-dock {
  /* 76px dock + device safe area */
  padding-bottom: calc(76px + env(safe-area-inset-bottom));
}

/* Single-line pendulum glow (no visible start/end, just sweeps left<->right) */
.pendulum-liner {
  height: 2px;
  position: relative;
  overflow: hidden;
}

.pendulum-liner .liner-bar {
  position: absolute;
  top: 0;
  bottom: 0;
  left: -40%;
  /* start well off-screen */
  width: 80%;
  /* long single glow line */
  display: block;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, .7), transparent);
  animation: pendulum 3.6s ease-in-out infinite alternate;
  will-change: transform, opacity;
}

@keyframes pendulum {
  0% {
    transform: translateX(-10%);
    opacity: .85;
  }

  50% {
    opacity: 1;
  }

  100% {
    transform: translateX(110%);
    opacity: .85;
  }
}

/* Helper: if you want only inner content to scroll on pages,
give the scrolling wrapper this class to keep the dock/top bar from rubber-banding */
.page-scroll {
  overscroll-behavior-y: contain;
  -webkit-overflow-scrolling: touch;
  touch-action: pan-y;
}

body.splash .global-dock {
  display: none !important;
}

body.splash .topbar-mobile {
  display: none !important;
}

body.splash {
  overflow: hidden;
}

/* styles/critical.css — loaded at layout-level so it renders before hydration */
:root {
  color-scheme: dark;
}


.btn:active {
  transform: translateY(.5px);
}

.btn-water {
  background: linear-gradient(180deg, rgba(255, 255, 255, .08), rgba(255, 255, 255, .04));
  backdrop-filter: blur(10px);
  box-shadow: inset 0 1px 0 rgba(255, 255, 255, .24),
    inset 0 -1px 0 rgba(0, 0, 0, .35),
    0 4px 16px rgba(0, 0, 0, .35);
}

.btn-water--active {
  background: #fff;
  color: #000;
  border-color: #fff;
}

/* Select pill look used in the header model/speed/mode pickers */
label.btn select {
  background: transparent;
  color: #fff;
  outline: none;
  font-size: 12px;
  padding-right: 1rem;
  appearance: none;
}

/* Input glow class that the composer uses */
.input-glow {
  box-shadow: 0 0 0 1px rgba(255, 255, 255, .14), inset 0 0 10px rgba(255, 255, 255, .06);
}

:root {
  --composer-h: 160px;
  --header-h: 120px;
}

/* ─── Theme palettes via root classes ───────────────────────── */
:root {
  color-scheme: light dark;
}

/* advertise both */
html.theme-dark {
  background: #000;
  color: #fff;
}

html.theme-light {
  background: #fff;
  color: #000;
}

/* Utility flips so your existing classes still look right on light */
html.theme-light .bg-black {
  background: #fff !important;
}

html.theme-light .bg-black\/75 {
  background: rgba(255, 255, 255, .75) !important;
}

html.theme-light .bg-black\/85 {
  background: rgba(255, 255, 255, .85) !important;
}

html.theme-light .text-white {
  color: #000 !important;
}

html.theme-light .text-zinc-200 {
  color: #2b2b2b !important;
}

html.theme-light .text-zinc-300 {
  color: #3a3a3a !important;
}

html.theme-light .text-zinc-400 {
  color: #595959 !important;
}

html.theme-light .border-white\/10 {
  border-color: rgba(0, 0, 0, .10) !important;
}

html.theme-light .border-white\/12 {
  border-color: rgba(0, 0, 0, .12) !important;
}

html.theme-light .border-white\/15 {
  border-color: rgba(0, 0, 0, .15) !important;
}

html.theme-light .bg-white\/4 {
  background: rgba(0, 0, 0, .04) !important;
}

html.theme-light .bg-white\/5 {
  background: rgba(0, 0, 0, .05) !important;
}

html.theme-light .bg-white\/6 {
  background: rgba(0, 0, 0, .06) !important;
}

/* Assistant bubble on light */
html.theme-light .px-3.py-2.bg-white\/6.border.border-white\/12 {
  background: rgba(0, 0, 0, .04) !important;
  border-color: rgba(0, 0, 0, .10) !important;
}

/* Composer border shimmer tuned for light */
html.theme-light .composer-shine {
  background: rgba(0, 0, 0, .04) !important;
}

html.theme-light .composer-shine::before {
  background: conic-gradient(from var(--angle),
      rgba(0, 0, 0, 0.00) 0deg,
      rgba(0, 0, 0, 0.55) 30deg,
      rgba(120, 120, 120, 0.45) 60deg,
      rgba(180, 180, 180, 0.25) 90deg,
      rgba(0, 0, 0, 0.00) 120deg);
}

/* ── Header controls (model / speed / mode) flip for LIGHT ─────────── */
html.theme-light .btn.btn-water,
html.theme-light .btn-water {
  background: rgba(0, 0, 0, .06) !important;
  /* soft light bg */
  border: 1px solid rgba(0, 0, 0, .18) !important;
  /* darker border */
  color: #000 !important;
  /* text goes black */
}

/* make the native select text + caret character black in light mode */
html.theme-light .btn-water select {
  color: #000 !important;
  -webkit-text-fill-color: #000 !important;
  /* iOS Safari */
}

/* the little "⌄" arrow span you render next to the select */
html.theme-light .btn-water>span {
  color: #000 !important;
  opacity: .7;
  /* keep it subtle, still readable */
}

/* (optional) ensure dark mode stays white with no surprises */
html.theme-dark .btn-water,
html.theme-dark .btn-water select,
html.theme-dark .btn-water>span {
  color: #fff !important;
}

/* ── Action row icons + timestamp flip for LIGHT ───────────── */
html.theme-light .action-row {
  color: #000 !important;
}

/* your SvgBase sets stroke="white"; this overrides it in LIGHT */
html.theme-light .action-row svg,
html.theme-light .action-btn svg {
  stroke: #000 !important;
}

/* hover keeps subtle contrast on light */
html.theme-light .action-btn:hover {
  filter: brightness(0.92);
}

/* time text under bubbles (you used text-zinc-500) */
html.theme-light .text-zinc-500 {
  color: #5a5a5a !important;
}

/* (optional) the tiny “×” and similar inline icon buttons */
html.theme-light .action-btn {
  color: #000 !important;
}

/* ===== User menu (scoped) ===== */
.user-menu {
  position: fixed;
  z-index: 100;
  border-radius: 18px;
  overflow: hidden;
  backdrop-filter: blur(14px);
  -webkit-backdrop-filter: blur(14px);
  border: 1px solid var(--sheet-border, rgba(255, 255, 255, .14));
  background: var(--sheet-bg, rgba(0, 0, 0, .88));
  box-shadow: 0 12px 40px rgba(0, 0, 0, .45);
}

/* light theme tokens */
html.theme-light .user-menu {
  --sheet-bg: rgba(255, 255, 255, .96);
  --sheet-border: rgba(0, 0, 0, .12);
  --sheet-div: rgba(0, 0, 0, .12);
  color: #111;
}

/* dark theme tokens */
html.theme-dark .user-menu {
  --sheet-bg: rgba(0, 0, 0, .88);
  --sheet-border: rgba(255, 255, 255, .14);
  --sheet-div: rgba(255, 255, 255, .12);
  color: #fff;
}

/* header row */
.user-menu .sheet-head {
  display: flex;
  align-items: center;
  gap: 10px;
  padding: 12px 14px;
  border-bottom: 1px solid var(--sheet-div);
}

.user-menu .sheet-head .avatar {
  height: 32px;
  width: 32px;
  border-radius: 999px;
  overflow: hidden;
  border: 1px solid var(--sheet-border);
  background: rgba(255, 255, 255, .12);
  display: grid;
  place-items: center;
}

.user-menu .sheet-head .avatar img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.user-menu .sheet-head .avatar .fallback {
  width: 100%;
  height: 100%;
  display: grid;
  place-items: center;
  font-size: 10px;
  font-weight: 600;
  color: #000;
  background: rgba(255, 255, 255, .35);
}

.user-menu .sheet-head .who .name {
  font-size: 14px;
  font-weight: 600;
}

.user-menu .sheet-head .who .sub {
  font-size: 12px;
  opacity: .6;
}

/* list + items */
.user-menu .sheet-list {
  list-style: none;
  margin: 0;
  padding: 0;
}

.user-menu .sheet-item {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 14px 16px;
  font-size: 15px;
  line-height: 1;
  background: transparent;
}

.user-menu .sheet-item+.sheet-item {
  /* hairline divider under each item like the second pic */
  border-top: 1px solid var(--sheet-div);
}

.user-menu .sheet-item:hover {
  background: rgba(255, 255, 255, .06);
}

html.theme-light .user-menu .sheet-item:hover {
  background: rgba(0, 0, 0, .04);
}

/* the Theme row control */
.user-menu .sheet-item--control select {
  background: transparent;
  border: 1px solid var(--sheet-border);
  border-radius: 8px;
  padding: 4px 8px;
  font-size: 12px;
  color: inherit;
  outline: none;
}

/* optional red-ish Sign out */
.user-menu .sheet-item--destructive {
  color: #ffb3b3;
}

html.theme-light .user-menu .sheet-item--destructive {
  color: #4b4a4a;
}

/* ===== Site tokens ===== */
:root {
  --th-bg: #000;
  --th-text: #fff;
  --th-card: rgba(255, 255, 255, .04);
  --th-border: rgba(255, 255, 255, .12);
  --th-accent: #3df6c9;
  --th-btn-bg: var(--th-accent);
  --th-btn-text: #031b14;
  --wallpaper-url: '';
}

/* apply tokens to major containers */
html[class*="theme-premium-"],
html[class*="theme-anim-"] {
  color-scheme: dark;
}

html[class*="theme-premium-"] body,
html[class*="theme-anim-"] body {
  background: var(--th-bg);
  color: var(--th-text);
}

/* high-use elements in your app */
html[class*="theme-premium-"] .app-header,
html[class*="theme-premium-"] .composer-root,
html[class*="theme-anim-"] .app-header,
html[class*="theme-anim-"] .composer-root {
  background: color-mix(in oklab, var(--th-bg), transparent 18%) !important;
  border-color: var(--th-border) !important;
}

/* cards, borders, menus */
html[class*="theme-premium-"] .user-menu,
html[class*="theme-anim-"] .user-menu {
  background: color-mix(in oklab, var(--th-bg), black 0%);
  border-color: var(--th-border);
}

html[class*="theme-premium-"] .history-card,
html[class*="theme-premium-"] .history-item {
  background: var(--th-card) !important;
  border-color: var(--th-border) !important;
}

/* accented controls */
html[class*="theme-premium-"] .upload-btn,
html[class*="theme-anim-"] .upload-btn {
  border-color: color-mix(in oklab, var(--th-accent), currentColor 40%);
}

html[class*="theme-premium-"] .btn,
html[class*="theme-anim-"] .btn {
  background: var(--th-btn-bg);
  color: var(--th-btn-text);
}

/* override the composer ring to follow accent */
html[class*="theme-premium-"] .composer-shine::before,
html[class*="theme-anim-"] .composer-shine::before {
  background: conic-gradient(from var(--angle),
      color-mix(in oklab, var(--th-accent), white 8%) 0deg,
      color-mix(in oklab, var(--th-accent), black 20%) 60deg,
      color-mix(in oklab, var(--th-accent), white 12%) 120deg,
      transparent 180deg);
}

/* Wallpapers (image layer) */
html.has-wallpaper body::before {
  content: "";
  position: fixed;
  inset: 0;
  z-index: -1;
  background: center/cover no-repeat var(--wallpaper-url);
  opacity: .28;
  filter: saturate(1.05) brightness(.95);
}

html.theme-light.has-wallpaper body::before {
  opacity: .22;
  filter: saturate(1.0) brightness(1);
}

/* Animated themes */
html.theme-anim-aurora-mint body::after,
html.theme-anim-butter-glow body::after {
  content: "";
  position: fixed;
  inset: -20%;
  z-index: -2;
  pointer-events: none;
  background:
    radial-gradient(40% 30% at 20% 30%, color-mix(in oklab, var(--th-accent), #00ffd0 40%), transparent 60%),
    radial-gradient(35% 30% at 70% 60%, color-mix(in oklab, var(--th-accent), #aaf0d1 25%), transparent 60%),
    radial-gradient(30% 25% at 40% 80%, color-mix(in oklab, var(--th-accent), #bfffe8 35%), transparent 60%);
  filter: blur(40px);
  animation: auroraFloat 18s ease-in-out infinite alternate;
}

@keyframes auroraFloat {
  0% {
    transform: translate3d(-2%, 0, 0) scale(1);
  }

  100% {
    transform: translate3d(2%, -2%, 0) scale(1.05);
  }
}

.drafts {
  display: flex;
  flex-wrap: wrap;
  gap: .5rem;
  margin: .5rem 0;
}

.chip {
  display: flex;
  align-items: center;
  gap: .5rem;
  border: 1px solid var(--border);
  padding: .25rem .5rem;
  border-radius: 999px;
}

.chip img {
  width: 20px;
  height: 20px;
  object-fit: cover;
  border-radius: 4px;
}

.chip .status {
  font-size: .75rem;
  opacity: .7
}

.chip .status.uploading {
  animation: pulse 1s infinite;
}

@keyframes pulse {
  0% {
    opacity: .3
  }

  50% {
    opacity: 1
  }

  100% {
    opacity: .3
  }
}

canvas {
  image-rendering: pixelated;
}

.msg-actions .icon:disabled {
  opacity: 0.35;
  cursor: not-allowed;
}

.spin {
  animation: spin .9s linear infinite;
}

.spin--slow {
  animation-duration: 1.6s;
}

/* slower look */
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

@keyframes spin-slow {
  to {
    transform: rotate(360deg);
  }
}

.animate-spin-slow {
  animation: spin-slow 0.9s linear infinite;
}

:root {
  font-family: system-ui, -apple-system, "Noto Sans", "Segoe UI",
    Roboto, "Helvetica Neue", Arial, "Noto Color Emoji",
    "Apple Color Emoji", "Segoe UI Emoji";
}

/* Make the Premium link render like a button inside assistant bubbles */
.msg-body a[href="/premium"],
.msg-body a[href^="/premium"] {
  display: inline-block;
  padding: 4px 10px;
  border-radius: 9999px;
  background: #fff;
  color: #000;
  font-weight: 700;
  text-decoration: none;
  border: 1px solid rgba(0, 0, 0, .15);
}

.msg-body a[href^="/premium"]:hover {
  filter: brightness(.95);
}

@keyframes slideInLR {
  from {
    transform: translateX(-14px);
    opacity: 0;
  }

  to {
    transform: translateX(0);
    opacity: 1;
  }
}

.feedback-slide {
  animation: slideInLR .35s ease forwards;
  will-change: transform, opacity;
}

.composer-root textarea {
  font-size: 16px;
  /* prevents iOS auto-zoom */
  line-height: 20px;
  -webkit-text-size-adjust: 100%;
}

/* Remove any shine/glow coming from utility or component classes */
.composer-root {
  backdrop-filter: none !important;
  -webkit-backdrop-filter: none !important;
}

.composer-shine,
.composer-shine::before,
.composer-shine::after,
.input-glow {
  background: transparent !important;
  box-shadow: none !important;
  filter: none !important;
}

/* iOS: keep the composer stable while keyboard is up */
@supports (-webkit-touch-callout: none) {
  .composer-root {
    transform: translateZ(0);
    -webkit-transform: translateZ(0);
  }
}

@supports (-webkit-touch-callout: none) {
  .composer-root {
    transform: translateZ(0);
    -webkit-transform: translateZ(0);
  }
}

/* ===== AUTH-ONLY SCOPE ===== */
.auth-scope {
  --btnGlow: 0 8px 26px rgba(255, 255, 255, .18);
  --btnInset: inset 0 1px 0 rgba(255, 255, 255, .85);
  --btnBorder: rgba(255, 255, 255, .28);
}

.auth-scope * {
  -webkit-tap-highlight-color: transparent;
}

/* Buttons (base) */
.auth-scope .btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: .5rem;
  width: 100%;
  border-radius: 9999px;
  padding: .65rem 1rem;
  transition: transform .12s ease, box-shadow .18s ease,
    background-color .18s ease, color .18s ease, border-color .18s ease;
  user-select: none;
}

@media (max-width:767px) {
  .auth-scope .btn {
    padding: .55rem .9rem;
  }
}

.auth-scope .btn:active {
  transform: scale(.985);
}

/* Primary (white) — must be black text */
.auth-scope .btn-primary {
  background: #fff;
  color: #000;
  border: 1px solid var(--btnBorder);
  box-shadow: var(--btnGlow), var(--btnInset);
}

@media (hover:hover) {
  .auth-scope .btn-primary:hover {
    background: #fff;
    color: #000;
    box-shadow: 0 12px 34px rgba(255, 255, 255, .25), var(--btnInset);
    transform: translateY(-.5px);
  }
}

.auth-scope .btn-primary:active {
  box-shadow: 0 4px 18px rgba(255, 255, 255, .22), var(--btnInset);
}

.auth-scope .btn-primary:disabled {
  background: rgba(255, 255, 255, .35);
  color: rgba(0, 0, 0, .55);
  box-shadow: none;
  cursor: not-allowed;
}

/* Outline / dark button — must be white text */
.auth-scope .btn-outline {
  background: rgba(0, 0, 0, .85);
  color: #fff;
  border: 1px solid rgba(255, 255, 255, .15);
}

@media (hover:hover) {
  .auth-scope .btn-outline:hover {
    background: rgba(0, 0, 0, .92);
    color: #fff;
    box-shadow: 0 8px 24px rgba(255, 255, 255, .06);
  }
}

.auth-scope .btn-outline:active {
  box-shadow: 0 3px 10px rgba(255, 255, 255, .05);
}

.auth-scope .btn-outline:disabled {
  opacity: .55;
  box-shadow: none;
}

/* Inputs (dark) */
.auth-scope input, .auth-scope textarea {
  color: #fff;
  background: rgba(255, 255, 255, .06);
  border: 1px solid rgba(255, 255, 255, .12);
}

.auth-scope input::placeholder, .auth-scope textarea::placeholder {
  color: #9ca3af;
}

.auth-scope input:focus, .auth-scope textarea:focus {
  border-color: rgba(255, 255, 255, .3);
  outline: none;
}

/* Checkbox — black/white only (no purple iOS) */
.auth-scope input[type="checkbox"] {
  appearance: none;
  -webkit-appearance: none;
  width: 16px;
  height: 16px;
  border-radius: 4px;
  border: 1.5px solid rgba(255, 255, 255, .35);
  background: transparent;
  position: relative;
}

.auth-scope input[type="checkbox"]:checked {
  background: #000;
  border-color: #000;
}

.auth-scope input[type="checkbox"]:checked::after {
  content: "";
  position: absolute;
  left: 4px;
  top: 1px;
  width: 5px;
  height: 9px;
  border: 2px solid #fff;
  border-top: none;
  border-left: none;
  transform: rotate(45deg);
}

/* Help panel buttons inherit correct colors */
.auth-scope .help-panel .btn-primary {
  background: #fff;
  color: #000;
}

.auth-scope .help-panel .btn-outline {
  background: #000;
  color: #fff;
}

/* Light theme overrides (black/white preserved) */
html.theme-light .auth-scope {
  color-scheme: light;
}

html.theme-light .auth-scope input, html.theme-light .auth-scope textarea {
  color: #111;
  background: rgba(0, 0, 0, .03);
  border-color: rgba(0, 0, 0, .12);
}

html.theme-light .auth-scope input::placeholder,
html.theme-light .auth-scope textarea::placeholder {
  color: #6b7280;
}

html.theme-light .auth-scope input:focus,
html.theme-light .auth-scope textarea:focus {
  border-color: rgba(0, 0, 0, .3);
}

html.theme-light .auth-scope .btn-outline {
  background: #111;
  color: #fff;
}

html.theme-light .auth-scope input[type="checkbox"] {
  border-color: rgba(0, 0, 0, .45);
}

html.theme-light .auth-scope input[type="checkbox"]:checked {
  background: #000;
  border-color: #000;
}

/* Trademark pinned at the very bottom on mobile */
.auth-scope .auth-footer {
  position: fixed;
  left: 0;
  right: 0;
  bottom: max(env(safe-area-inset-bottom), 8px);
  text-align: center;
  font-size: .875rem;
  color: #9ca3af;
  pointer-events: none;
}

/* AUTH hover – keep white bg + black text for primary; dark for outline */
@media (hover:hover) {
  .auth-scope .btn-primary:hover {
    background: #fff;
    color: #000;
  }

  .auth-scope .btn-outline:hover {
    background: #000;
    color: #fff;
  }
}

/* Mobile tap feedback (no color flip) */
.auth-scope .btn:active {
  transform: scale(.985);
}

/* Light/Dark theme tokens */
html {
  color-scheme: light dark;
}

:root {
  --bg: #ffffff;
  --fg: #0b0c10;
  --muted: #4b5563;
  --card: #f6f7f9;
  --card-border: #e5e7eb;
  --card-shadow: 0 16px 60px rgba(0, 0, 0, .08);
}

@media (prefers-color-scheme: dark) {
  :root {
    --bg: #0a0b0d;
    --fg: #e9e9f0;
    --muted: #9ca3af;
    --card: #111317;
    --card-border: rgba(255, 255, 255, .12);
    --card-shadow: 0 16px 60px rgba(0, 0, 0, .45);
  }
}

/* Shared card styles use vars (works in both modes) */
.card-3d {
  background: var(--card);
  border: 1px solid var(--card-border);
  box-shadow: var(--card-shadow);
  border-radius: 16px;
  transition: transform .18s, box-shadow .25s, background .4s, border-color .4s;
}

/* ─── Policies: light/dark compatible wrapper ───────────────────────────── */
.legal-scope {
  color-scheme: light dark;
}

.legal-scope {
  --bg: #0b0d10;
  /* dark */
  --fg: #e5e7eb;
  --muted: #9ca3af;
  --heading: #ffffff;
  --subhead: #cbd5e1;
  --card-bg: rgba(255, 255, 255, .06);
  --card-border: rgba(255, 255, 255, .12);
}

html.theme-light .legal-scope {
  --bg: #ffffff;
  /* light */
  --fg: #0b0f13;
  --muted: #52525b;
  --heading: #0b0f13;
  --subhead: #334155;
  --card-bg: rgba(255, 255, 255, .92);
  --card-border: rgba(0, 0, 0, .10);
}

.legal-scope {
  background: var(--bg);
  color: var(--fg);
}

.legal-scope h1, .legal-scope h2, .legal-scope h3, .legal-scope h4 {
  color: var(--heading);
}

.legal-scope .subhead, .legal-scope .lead, .legal-scope .text-muted {
  color: var(--subhead);
}

/* “glass” cards used by PageShell/Card */
.legal-scope .glass, .legal-scope .policy-card {
  background: var(--card-bg);
  border: 1px solid var(--card-border);
  border-radius: 16px;
  backdrop-filter: blur(24px);
}

/* links stay readable on both themes */
.legal-scope a {
  color: inherit;
  text-decoration-color: color-mix(in srgb, currentColor 40%, transparent);
}

.legal-scope a:hover {
  text-decoration-color: currentColor;
}

/* ── Policy theme (scoped) ───────────────────────────────────────── */
.legal-scope {
  /* defaults = dark */
  --tx: #e6e6e7;
  /* body text */
  --tx-muted: #a1a1aa;
  /* subtext */
  --tx-heading: #ffffff;
  /* h1–h6 */
  --bg-card: rgba(255, 255, 255, .06);
  --bd-card: rgba(255, 255, 255, .12);
  color: var(--tx);
}

html.theme-light .legal-scope {
  --tx: #0b0b0c;
  --tx-muted: #4b5563;
  /* slate-600 */
  --tx-heading: #0b0b0c;
  --bg-card: rgba(255, 255, 255, .92);
  --bd-card: rgba(0, 0, 0, .08);
}

/* Headings & text */
.legal-scope h1, .legal-scope h2, .legal-scope h3,
.legal-scope h4, .legal-scope h5, .legal-scope h6 {
  color: var(--tx-heading);
}

.legal-scope .lead, .legal-scope .muted, .legal-scope .text-muted {
  color: var(--tx-muted);
}

/* If old markup uses Tailwind tints, normalize them here */
.legal-scope :is(.text-zinc-300, .text-zinc-400, .text-zinc-500) {
  color: var(--tx-muted) !important;
}

/* Cards / glass surfaces from PolicyLayout */
.legal-scope .card,
.legal-scope .glass {
  background: var(--bg-card);
  border: 1px solid var(--bd-card);
  backdrop-filter: blur(12px);
  border-radius: 16px;
}

/* Nice basics */
.legal-scope a {
  text-decoration: underline;
  text-underline-offset: 3px;
}

.legal-scope ul {
  list-style: disc;
  padding-left: 1.25rem;
}

.legal-scope ol {
  list-style: decimal;
  padding-left: 1.25rem;
}

/* ── Policy theme (scoped) ───────────────────────────── */
.legal-scope {
  /* defaults = dark */
  --tx: #e6e6e7;
  --tx-muted: #a1a1aa;
  --tx-heading: #ffffff;
  --bg-card: rgba(255, 255, 255, .06);
  --bd-card: rgba(255, 255, 255, .12);
  color: var(--tx);
}

html.theme-light .legal-scope {
  --tx: #0b0b0c;
  --tx-muted: #4b5563;
  --tx-heading: #0b0b0c;
  --bg-card: rgba(255, 255, 255, .92);
  --bd-card: rgba(0, 0, 0, .08);
}

.legal-scope h1, .legal-scope h2, .legal-scope h3,
.legal-scope h4, .legal-scope h5, .legal-scope h6 {
  color: var(--tx-heading);
}

.legal-scope .lead, .legal-scope .muted, .legal-scope .text-muted {
  color: var(--tx-muted);
}

/* normalize old Tailwind tints to theme vars */
.legal-scope :is(.text-zinc-300, .text-zinc-400, .text-zinc-500) {
  color: var(--tx-muted) !important;
}

.legal-scope .card, .legal-scope .glass {
  background: var(--bg-card);
  border: 1px solid var(--bd-card);
  backdrop-filter: blur(12px);
  border-radius: 16px;
}

/* --- Universal helper to anchor the help button to the card on desktop --- */
@media (min-width:768px) {

  /* Mark the card wrapper with .help-anchor (see step 2) */
  .help-anchor {
    position: relative !important;
  }

  /* The button itself lives inside .help-anchor */
  .help-anchor>.help-toggle {
    position: absolute !important;
    right: 0 !important;
    /* snap to card's right edge */
    left: auto !important;
    top: -12px !important;
    /* sits just above the card */
    transform: none !important;
  }
}

/* Mobile stays fixed at the screen top-right (safe area aware) */
@media (max-width:767px) {
  .help-toggle {
    position: fixed !important;
    top: calc(env(safe-area-inset-top)+10px) !important;
    right: calc(env(safe-area-inset-right)+10px) !important;
    left: auto !important;
  }
}

/* No vertical scroll on focused auth screens */
.auth-screen {
  min-height: 100svh;
  /* safe viewport height on mobile */
  overflow: hidden;
  /* lock page scrolling */
}

@supports (height: 100dvh) {
  .auth-screen {
    min-height: 100dvh;
  }
}

/* Prevent rubber-band on iOS */
.auth-screen {
  overscroll-behavior: none;
}

:root {
  --th-bg: #0b0b0b;
  /* fallback */
  --th-bg-img: initial;
  --th-text: #fff;
  --th-icon: #fff;
  --th-muted: rgba(255, 255, 255, .6);
  --th-line: rgba(255, 255, 255, .18);
  --th-surface: rgba(255, 255, 255, .08);
  --th-surface-2: rgba(255, 255, 255, .12);

  --th-btn-bg: rgba(255, 255, 255, .10);
  --th-btn-bd: rgba(255, 255, 255, .18);
  --th-btn-text: var(--th-text);
}

/* page background (image or solid) */
html, body {
  background: var(--th-bg-img, var(--th-bg));
  background-size: cover;
  background-attachment: fixed;
  color: var(--th-text);
}


/* inputs & chips */
.msg-body, .composer-shine, .att-chip, .sheet-item, .menu-link, .hdr-compact .btn {
  background: var(--th-surface);
  border-color: var(--th-line);
}


/* chat toolbar icons visible on dark & light */
.theme-dark .icon img.theme-aware {
  filter: invert(1) brightness(1.1);
}

.theme-light .icon img.theme-aware {
  filter: none;
}


/* ====== header tint remains sleek in dark ====== */
.app-header {
  background: color-mix(in srgb, var(--th-text) 6%, var(--th-bg));
}

/* smaller chips in panel header */
.btn.btn-water {
  padding: 4px 10px;
  font-size: 12px;
}

/* generic icon/text helpers */
.text-muted {
  color: var(--th-muted);
}

.border-line {
  border-color: var(--th-line);
}

.bg-surface {
  background: var(--th-surface);
}

.bg-surface-2 {
  background: var(--th-surface-2);
}

/* ensure buttons inside composer stay readable */
.composer-root .btn,
.composer-root button,
.composer-root .upload-btn {
  color: var(--th-btn-text);
  background: var(--th-btn-bg);
  border: 1px solid var(--th-btn-bd);
}


/* base apply everywhere */
body, .min-h-svh {
  background: var(--th-bg) !important;
  color: var(--th-text) !important;
}

* {
  border-color: var(--th-border);
}

a, .link {
  color: var(--th-text);
}


.btn-xs {
  padding: 2px 8px;
  font-size: 12px;
  border-radius: 999px;
}

/* icons under chat bubble etc. */
.msg-actions button svg,
.composer-root button svg,
.hdr-compact svg,
.bottom-nav svg {
  fill: var(--icon-fg);
  stroke: var(--icon-fg);
}


/* chat bubbles contrast fix */
.msg-body {
  color: var(--th-text);
}

.msg-body a {
  color: var(--btn-fg);
  background: transparent;
  text-decoration: underline;
}



/* composer/sent icon buttons use tokens */
.upload-btn,
.composer-root .h-8.w-8 {
  background: var(--th-surface);
  color: var(--icon-fg);
}

/* send button */
.composer-root .h-8.px-3 {
  background: var(--btn-bg) !important;
  color: var(--btn-fg) !important;
}


/* shrink chips */
.swatch {
  width: 86px;
  height: 56px;
}

.swatch-sm {
  width: 72px;
  height: 48px;
}

/* brand button + orb label always readable */
.sixxai-btn,


/* icons under the chat bubble use theme tokens */
.chat-actions button,
.composer-root button,
.bottom-nav button {
  color: var(--icon-fg) !important;
}

.chat-actions svg,
.composer-root svg,
.bottom-nav svg {
  fill: currentColor;
  stroke: currentColor;
}

/* style when none is selected */
.anim-card[aria-selected="true"][title~="None"],
.anim-card.is-active[title~="None"] {
  outline: 2px solid #fff7;
}

/* ensure no background layer when none */
:root:not([data-anim]) body::before {
  content: none !important;
}

/* keep both scroll directions enabled */
.anim-row, .palette-row {
  display: flex;
  gap: 8px;
  overflow-x: auto;
  overflow-y: hidden;
  -webkit-overflow-scrolling: touch;
  padding-bottom: 6px;
  scroll-snap-type: x proximity;
}

.theme-panel {
  max-height: min(78vh, 640px);
  overflow-y: auto;
}

/* Chat action icons under each bubble */
.msg-actions button,
.msg-actions svg,
.msg-actions [role="button"] {
  color: var(--icon-fg, var(--th-text, #fff));
  /* <-- force readable color */
  stroke: currentColor;
  fill: none;
}

/* optional: slight visibility boost on dark */
.theme-dark .msg-actions button {
  opacity: .92;
}

.theme-light .msg-actions button {
  opacity: .85;
}

.msg-actions button:hover {
  opacity: 1;
}

.hscroll-row {
  position: relative;
}

.hscroll-wrap {
  display: flex;
  gap: 8px;
  overflow-x: auto;
  scrollbar-width: none;
}

.hscroll-wrap::-webkit-scrollbar {
  display: none;
}

.hscroll-bar {
  margin-top: 6px;
  padding: 0 4px;
}

.hscroll-bar input[type="range"] {
  width: 100%;
  appearance: none;
  height: 6px;
  background: linear-gradient(#fff6, #fff2);
  border-radius: 999px;
}

.hscroll-bar input[type="range"]::-webkit-slider-thumb {
  appearance: none;
  width: 14px;
  height: 14px;
  border-radius: 50%;
  background: #fff;
  box-shadow: 0 1px 3px #0006;
}

.theme-btn {
  background: transparent;
  color: var(--icon-fg);
}

.theme-btn:hover {
  background: transparent;
}

/* ---------- Global theme tokens ---------- */
:root {
  --th-bg: #0b0b0b;
  /* will be overridden by the init script */
  --th-text: #f6f7fb;
  --th-muted: rgba(255, 255, 255, .62);
  --th-border: rgba(255, 255, 255, .18);
  --th-surface: rgba(255, 255, 255, .06);
  --btn-bg: #ffffff;
  --btn-fg: #000000;
  --icon-fg: var(--th-text);
}

/* Base */
html, body {
  background: var(--th-bg);
  color: var(--th-text);
}

/* Neutral surface helpers you can reuse anywhere */
.surface {
  background: var(--th-surface);
}

.muted {
  color: var(--th-muted);
}

.hairline {
  border: 1px solid var(--th-border);
}

/* Buttons that follow tokens automatically */
.btn-neutral {
  background: var(--btn-bg);
  color: var(--btn-fg);
  border: 1px solid var(--th-border);
}

.btn-ghost {
  background: transparent;
  color: var(--th-text);
  border: 1px solid var(--th-border);
}

/* Spinners & strokes that need to flip automatically */
.spin-neutral {
  border: 2px solid rgba(255, 255, 255, .72);
  border-top-color: transparent;
}

html.theme-light .spin-neutral {
  border-color: rgba(0, 0, 0, .72);
  border-top-color: transparent;
}

/* Icon tint */
.icon-neutral {
  color: var(--icon-fg);
  fill: currentColor;
  stroke: currentColor;
}

/* Optional: inputs get better native theming */
:root {
  color-scheme: light dark;
}

/* the init script sets it precisely at runtime */
:root {
  --th-bg: #000;
  /* safe default to avoid flash */
  --th-text: #fff;
  --page-bg: var(--th-bg);
}

html, body {
  background: var(--page-bg);
  color: var(--th-text);
}

/* Make the UA use the correct color scheme for form controls, etc. */
:root {
  color-scheme: light dark;
}

/* Baseline: page must be scrollable and fill the real viewport on mobile */
html, body {
  height: 100%;
}

body {
  /* modern viewport units that account for browser UI bars */
  min-height: 100svh;
  min-height: 100dvh;
  /* most modern browsers */
  min-height: 100vh;
  /* fallback */
  overflow-y: auto;
  /* never lock page scroll globally */
  -webkit-overflow-scrolling: touch;
  /* smooth scroll on iOS */
}

/* App root should stretch and allow the main area to grow */
#root, #__next {
  min-height: 100%;
  display: flex;
  flex-direction: column;
}

/* Your main content area fills remaining height and can scroll inside */
main {
  flex: 1 1 auto;
  min-height: 0;
  /* important for nested flex + scroll */
}

/* If you have a fixed bottom composer/nav, keep content above it */
.site-main--with-fixed-bottom {
  padding-bottom: calc(env(safe-area-inset-bottom) + 96px);
}

/* Safe area helpers (optional) */
.safe-pb {
  padding-bottom: env(safe-area-inset-bottom);
}

.safe-pt {
  padding-top: env(safe-area-inset-top);
}

/* Sensible defaults */
* {
  box-sizing: border-box;
}

img, video, canvas, svg {
  max-width: 100%;
  height: auto;
}

:root {
  --th-bg: #ffffff;
  --th-text: #111111;
}

html.dark {
  --th-bg: #000000;
  --th-text: #ffffff;
}

body {
  background: var(--th-bg);
  color: var(--th-text);
}

/* default light */
html {
  --th-bg: #ffffff;
  --th-text: #0c0c0d;
  --th-border: rgba(0, 0, 0, 0.12);
}

/* next-themes toggles this class */
html.dark {
  --th-bg: #0b0b0c;
  --th-text: #ffffff;
  --th-border: rgba(255, 255, 255, 0.14);
}

@layer six-theme {
  :root {
    /* already have --th-bg, --th-text, --th-border from earlier */
    --btn-bg: color-mix(in oklab, var(--th-bg) 86%, #000);
    --btn-fg: var(--th-text);
    --badge-bg: color-mix(in oklab, var(--th-text) 10%, transparent);
    --overlay-bg: rgba(0, 0, 0, .35);
  }

  html.dark {
    --btn-bg: color-mix(in oklab, var(--th-bg) 86%, #fff);
    --badge-bg: color-mix(in oklab, var(--th-text) 18%, transparent);
    --overlay-bg: rgba(255, 255, 255, .20);
  }
}

/* card/surface helpers used above */
.th-surface {
  background: var(--th-bg);
  color: var(--th-text);
  border-color: var(--th-border);
}

.th-card {
  background: var(--surface-1);
  color: var(--th-text);
  border-color: var(--th-border);
}

.th-chip {
  background: var(--btn-bg);
  color: var(--btn-fg);
  border: 1px solid var(--th-border);
}

.modal-overlay {
  background: var(--overlay-bg);
}

/* --- 6ix Intro Modal: mobile-safe, iOS/Android friendly --- */
:root {
  --sa-top: env(safe-area-inset-top, 0px);
  --sa-right: env(safe-area-inset-right, 0px);
  --sa-bottom: env(safe-area-inset-bottom, 0px);
  --sa-left: env(safe-area-inset-left, 0px);
}

.six-overlay {
  position: fixed;
  inset: 0;
  z-index: 9999;
  display: grid;
  place-items: center;
  padding: max(12px, var(--sa-top)) max(12px, var(--sa-right)) max(12px, var(--sa-bottom)) max(12px, var(--sa-left));
  background: rgba(0, 0, 0, .35);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  overscroll-behavior: contain;
  /* stop iOS rubber-band */
}

/* Fallback when blur isn’t available (older Android/WebView) */
@supports not ((backdrop-filter: blur(1px)) or (-webkit-backdrop-filter: blur(1px))) {
  .six-overlay {
    background: rgba(0, 0, 0, .6);
  }
}

.six-card {
  width: min(600px, 92vw);
  max-height: 88vh;
  /* fallback */
  max-height: 88dvh;
  /* modern mobile */
  border-radius: 20px;
  border: 1px solid var(--th-border, #2a2a2a);
  overflow: auto;
  box-shadow: 0 30px 120px rgba(0, 0, 0, .45);
  -webkit-overflow-scrolling: touch;
  /* smooth scroll on iOS */
  background: var(--surface-1, rgba(255, 255, 255, .92));
  color: var(--th-text, #111);
}

/* Auto theme */
@media (prefers-color-scheme: dark) {
  .six-card {
    background: rgba(17, 17, 19, .9);
    color: #fff;
    border-color: #2b2b2b;
  }

  .six-tagline {
    color: #b7bdc6;
  }
}

/* Typography/layout bits (keep it lean) */
.six-header {
  padding: 18px 18px 6px;
  text-align: center;
}

.six-tagline {
  margin: 6px 0 0;
  font-size: 13px;
  opacity: .8;
}

.six-grid {
  display: grid;
  gap: 12px;
  padding: 6px 18px 4px;
}

@media (min-width: 640px) {
  .six-grid {
    grid-template-columns: 1fr 1fr 1fr;
  }
}

.six-block {
  border: 1px solid var(--th-border, #e5e7eb);
  border-radius: 14px;
  padding: 12px;
  background: rgba(255, 255, 255, .55);
}

@media (prefers-color-scheme: dark) {
  .six-block {
    background: rgba(0, 0, 0, .25);
    border-color: #242424;
  }
}

.six-block-title {
  font-weight: 700;
  margin-bottom: 4px;
}

.six-block-text {
  font-size: 13px;
  opacity: .9;
}

.six-cta-cards {
  display: grid;
  gap: 12px;
  padding: 6px 18px;
}

@media (min-width: 640px) {
  .six-cta-cards {
    grid-template-columns: 1fr 1fr;
  }
}

.six-cta {
  border: 1px solid var(--th-border, #e5e7eb);
  border-radius: 14px;
  padding: 12px;
  background: rgba(255, 255, 255, .55);
}

@media (prefers-color-scheme: dark) {
  .six-cta {
    background: rgba(0, 0, 0, .25);
    border-color: #242424;
  }
}

.six-cta-head {
  font-weight: 700;
  margin-bottom: 6px;
}

.six-list {
  margin: 0;
  padding-left: 18px;
  line-height: 1.5;
  font-size: 13px;
}

.six-note {
  padding: 6px 18px 0;
  font-size: 13px;
  opacity: .95;
}

.six-actions {
  display: flex;
  gap: 8px;
  flex-wrap: wrap;
  padding: 14px 18px 16px;
  justify-content: center;
}

/* Buttons inherit your global overrides; these are minimal guards */
.six-btn {
  border-radius: 9999px;
  padding: 10px 14px;
  font-weight: 600;
  border: 1px solid currentColor;
}

.six-btn-primary {
  background: #111;
  color: #fff;
  border-color: #111;
}

.six-btn-primary:hover {
  filter: brightness(1.06);
}

.six-btn-ghost {
  background: transparent;
  color: inherit;
}

.six-btn-minor {
  background: transparent;
  opacity: .85;
}

.six-once {
  text-align: center;
  font-size: 11px;
  opacity: .7;
  padding: 0 0 12px;
}

/* --- 6ix Intro Modal v2: mobile-safe, iOS/Android friendly, read-only --- */
:root {
  --sa-top: env(safe-area-inset-top, 0px);
  --sa-right: env(safe-area-inset-right, 0px);
  --sa-bottom: env(safe-area-inset-bottom, 0px);
  --sa-left: env(safe-area-inset-left, 0px);
  --th-border: #2a2a2a;
  --th-text: #111;
  --surface-1: rgba(255, 255, 255, .92);
}

@media (prefers-color-scheme: dark) {
  :root {
    --th-border: #2b2b2b;
    --th-text: #fff;
    --surface-1: rgba(17, 17, 19, .9);
  }
}

.six-overlay {
  position: fixed;
  inset: 0;
  z-index: 9999;
  display: grid;
  place-items: center;
  padding: max(12px, var(--sa-top)) max(12px, var(--sa-right)) max(12px, var(--sa-bottom)) max(12px, var(--sa-left));
  background: rgba(0, 0, 0, .35);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  overscroll-behavior: contain;
  /* stop iOS rubber-band */
}

@supports not ((backdrop-filter: blur(1px)) or (-webkit-backdrop-filter: blur(1px))) {
  .six-overlay {
    background: rgba(0, 0, 0, .6);
  }
}

.six-card {
  width: min(600px, 92vw);
  max-height: 88vh;
  max-height: 88dvh;
  border-radius: 20px;
  border: 1px solid var(--th-border);
  overflow: auto;
  box-shadow: 0 30px 120px rgba(0, 0, 0, .45);
  -webkit-overflow-scrolling: touch;
  background: var(--surface-1);
  color: var(--th-text);
}

.six-header {
  padding: 18px 18px 6px;
  text-align: center;
  display: grid;
  grid-auto-flow: row;
  gap: 10px;
  justify-items: center;
}

.six-tagline {
  margin: 2px 0 0;
  font-size: 13px;
  opacity: .8;
}

/* Play Button */
.six-play {
  display: inline-flex;
  align-items: center;
  gap: 10px;
  padding: 10px 14px;
  border-radius: 999px;
  border: 1px solid currentColor;
  background: transparent;
  cursor: pointer;
  user-select: none;
}

.six-play:disabled {
  opacity: .6;
  cursor: not-allowed;
}

.six-play-ico {
  display: inline-flex;
  align-items: center;
  justify-content: center;
}

.six-play-label {
  font-weight: 700;
  letter-spacing: .2px;
}

.six-grid {
  display: grid;
  gap: 12px;
  padding: 6px 18px 4px;
}

@media (min-width: 640px) {
  .six-grid {
    grid-template-columns: 1fr 1fr 1fr;
  }
}

.six-block {
  border: 1px solid var(--th-border);
  border-radius: 14px;
  padding: 12px;
  background: rgba(255, 255, 255, .55);
}

@media (prefers-color-scheme: dark) {
  .six-block {
    background: rgba(0, 0, 0, .25);
  }
}

.six-block-title {
  font-weight: 700;
  margin-bottom: 4px;
}

.six-block-text {
  font-size: 13px;
  opacity: .9;
}

.six-cta-cards {
  display: grid;
  gap: 12px;
  padding: 6px 18px;
}

@media (min-width: 640px) {
  .six-cta-cards {
    grid-template-columns: 1fr 1fr;
  }
}

.six-cta {
  border: 1px solid var(--th-border);
  border-radius: 14px;
  padding: 12px;
  background: rgba(255, 255, 255, .55);
}

@media (prefers-color-scheme: dark) {
  .six-cta {
    background: rgba(0, 0, 0, .25);
  }
}

.six-cta-head {
  font-weight: 700;
  margin-bottom: 6px;
}

.six-list {
  margin: 0;
  padding-left: 18px;
  line-height: 1.5;
  font-size: 13px;
}

.six-note {
  padding: 6px 18px 0;
  font-size: 13px;
  opacity: .95;
}

.six-actions {
  display: flex;
  gap: 8px;
  flex-wrap: wrap;
  padding: 14px 18px 16px;
  justify-content: center;
}

/* Buttons (read-only modal: only "Got it") */
.six-btn {
  border-radius: 9999px;
  padding: 10px 14px;
  font-weight: 700;
  border: 1px solid currentColor;
}

.six-btn-primary {
  background: #111;
  color: #fff;
  border-color: #111;
}

.six-btn-primary:hover {
  filter: brightness(1.06);
}

.six-once {
  text-align: center;
  font-size: 11px;
  opacity: .7;
  padding: 0 0 12px;
}

/* No-anchor guard: the modal contains no <a>; if any slip in, neutralize them */
.six-card a {
  pointer-events: none;
  text-decoration: none;
  color: inherit;
}

/* FINAL OVERRIDE — must be last */
:where(.home-scope, .auth-scope, .signin-scope, .verify-scope, .profile-scope):is(.btn-primary, .btn-white, button[type="submit"].btn, a.btn-primary) {
  background: #fff !important;
  color: #000 !important;
  border-color: #e5e7eb !important;
  text-shadow: none !important;
}

/* dark/ghost buttons stay dark with white text */
:where(.home-scope, .auth-scope, .signin-scope, .verify-scope, .profile-scope):is(.btn-outline, .btn-ghost, .btn-black, .btn-dark) {
  background: #111 !important;
  color: #fff !important;
  border-color: #0b0c10 !important;
}

/* never let later passes recolor text */
:where(.home-scope, .auth-scope, .signin-scope, .verify-scope, .profile-scope) .btn,
:where(.home-scope, .auth-scope, .signin-scope, .verify-scope, .profile-scope) .btn * {
  --tw-ring-color: transparent !important;
  --tw-ring-shadow: 0 0 #0000 !important;
  text-shadow: none !important;
}

/* keep hover/focus from flipping palette */
@media (hover:hover) {

  :where(.home-scope, .auth-scope, .signin-scope, .verify-scope, .profile-scope) .btn:hover,
  :where(.home-scope, .auth-scope, .signin-scope, .verify-scope, .profile-scope) .btn:focus-visible {
    background: inherit !important;
    color: inherit !important;
    border-color: inherit !important;
  }
}

/* ===== ONBOARDING/LANDING BUTTON KILL-SWITCH (LAST RULES) ===== */
:where(.home-scope, .auth-scope, .verify-scope, .profile-scope, .signin-scope):is(.btn, .btn-primary, .btn-white, .btn-outline, .btn-ghost) {
  /* palette */
  background: #fff !important;
  color: #000 !important;
  border: 1px solid #e5e7eb !important;

  /* kill glow, light-up, transitions */
  box-shadow: none !important;
  filter: none !important;
  text-shadow: none !important;
  transition: none !important;
  transform: none !important;
  --tw-ring-color: transparent !important;
  --tw-ring-shadow: 0 0 #0000 !important;
}

/* dark/ghost variants stay dark with white text */
:where(.home-scope, .auth-scope, .verify-scope, .profile-scope, .signin-scope):is(.btn-outline, .btn-ghost) {
  background: #111 !important;
  color: #fff !important;
  border-color: #0b0c10 !important;
}

/* force children to not re-color (kills .text-white etc.) */
:where(.home-scope, .auth-scope, .verify-scope, .profile-scope, .signin-scope) .btn * {
  color: inherit !important;
  fill: currentColor !important;
  stroke: currentColor !important;
}

/* kill pseudo-element sheen / water effects */
:where(.home-scope, .auth-scope, .verify-scope, .profile-scope, .signin-scope):is(.btn, .btn-primary, .btn-white, .btn-outline, .btn-ghost)::before,
:where(.home-scope, .auth-scope, .verify-scope, .profile-scope, .signin-scope):is(.btn, .btn-primary, .btn-white, .btn-outline, .btn-ghost)::after {
  content: none !important;
  animation: none !important;
}

/* keep palette stable on any interaction */
:where(.home-scope, .auth-scope, .verify-scope, .profile-scope, .signin-scope):is(.btn, .btn-primary, .btn-white, .btn-outline, .btn-ghost):hover,
:where(.home-scope, .auth-scope, .verify-scope, .profile-scope, .signin-scope):is(.btn, .btn-primary, .btn-white, .btn-outline, .btn-ghost):focus,
:where(.home-scope, .auth-scope, .verify-scope, .profile-scope, .signin-scope):is(.btn, .btn-primary, .btn-white, .btn-outline, .btn-ghost):active,
:where(.home-scope, .auth-scope, .verify-scope, .profile-scope, .signin-scope):is(.btn, .btn-primary, .btn-white, .btn-outline, .btn-ghost):focus-visible {
  background: inherit !important;
  color: inherit !important;
  border-color: inherit !important;
  box-shadow: none !important;
  outline: none !important;
}