/* ======================== 6IX — GLOBALS ======================== */



/* Base font & polish */
html,
body {
    font-family: ui-sans-serif, system-ui, "Inter", "SF Pro Text", "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
    font-synthesis-weight: auto;
}

:root {
    -webkit-text-size-adjust: 100%;
}

* {
    touch-action: manipulation;
}

img {
    text-decoration: none;
    border: 0;
}

/* Markdown in assistant bubbles */
.msg-body {
    white-space: normal;
}

.msg-body p {
    margin: 0 0 .5rem 0;
}

.msg-body ul,
.msg-body ol {
    margin: .25rem 0 .5rem 0;
    padding-left: 1.25rem;
}

.msg-body li {
    margin: .12rem 0;
}

/* Small helpers */
.bg-white\/4 {
    background: rgba(255, 255, 255, .04);
}

/* ======================== BUTTONS / CTAs ======================= */

/* Premium CTA (auto inverts with theme) */
.btn-premium {
    height: 28px;
    padding: 0 12px;
    border-radius: 9999px;
    font-size: 12px;
    font-weight: 700;
    transition: transform .06s ease, filter .15s ease, background .15s ease, color .15s ease;
    box-shadow: 0 2px 10px rgba(0, 0, 0, .25);
    border: 1px solid currentColor;
}

html.theme-dark .btn-premium {
    background: #fff;
    color: #000;
    border-color: rgba(255, 255, 255, .9);
}

html.theme-light .btn-premium {
    background: #000;
    color: #fff;
    border-color: rgba(0, 0, 0, .9);
}

.btn-premium:hover {
    filter: brightness(1.06);
}

.btn-premium:active {
    transform: translateY(1px);
}

.btn-premium:focus-visible {
    outline: 2px solid var(--th-accent, #409cff);
    outline-offset: 2px;
}

/* Upload button */
.upload-btn {
    color: #fff;
    background: transparent;
    border: 1px solid rgba(255, 255, 255, .28);
    transition: background .15s ease, filter .15s ease, transform .06s ease;
}

.upload-btn:hover {
    background: rgba(255, 255, 255, .10);
}

.upload-btn:active {
    transform: scale(.97);
}

.upload-btn:focus-visible {
    outline: 2px solid currentColor;
    outline-offset: 2px;
}

html.theme-light .upload-btn {
    color: #000;
    border-color: rgba(0, 0, 0, .30);
}

html.theme-light .upload-btn:hover {
    background: rgba(0, 0, 0, .08);
}

/* Action row under bubbles */
.action-row {
    display: flex;
    gap: 12px;
    align-items: center;
    margin-top: 4px;
    color: #fff;
}

.action-btn {
    display: inline-grid;
    place-items: center;
    width: 22px;
    height: 22px;
    border-radius: 6px;
}

.action-btn:hover {
    filter: brightness(1.08);
    transform: scale(1.06);
}

/* Micro effects */
.dot {
    display: inline-block;
    width: 6px;
    height: 6px;
    border-radius: 50%;
    background: rgba(255, 255, 255, .65);
    animation: dot 1s infinite
}

.dot:nth-child(2) {
    animation-delay: .12s
}

.dot:nth-child(3) {
    animation-delay: .24s
}

@keyframes dot {

    0%,
    80%,
    100% {
        transform: translateY(0)
    }

    40% {
        transform: translateY(-3px)
    }
}

.btn-flicker {
    animation: flicker .16s linear 1
}

@keyframes flicker {
    0% {
        filter: brightness(1)
    }

    50% {
        filter: brightness(1.8)
    }

    100% {
        filter: brightness(1)
    }
}

.input-glow {
    box-shadow: 0 0 0 1px rgba(255, 255, 255, .14), inset 0 0 10px rgba(255, 255, 255, .06);
}

.rainbow {
    background: linear-gradient(90deg, #ff7af5, #ffd36e, #8af5ff, #b6ff6e, #ff7af5);
    background-size: 300% 100%;
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
    animation: rainbowShift 2.2s linear infinite;
}

@keyframes rainbowShift {
    0% {
        background-position: 0% 50%
    }

    100% {
        background-position: 300% 50%
    }
}

/* ======================== MENU / HISTORY ======================= */

html.theme-light .user-menu {
    color: #000 !important;
    background: #fff !important;
    border-color: rgba(0, 0, 0, .12) !important;
}

html.theme-light .user-menu .sheet-item,
html.theme-light .user-menu .menu-link {
    color: #000 !important;
}

html.theme-light .user-menu select {
    color: #000 !important;
    border-color: rgba(0, 0, 0, .18) !important;
    background: rgba(0, 0, 0, .03) !important;
}

/* tiny copy note row */
html.theme-light .user-menu .text-\[12px\] {
    color: #111 !important;
}

/* History card */
.history-card .history-open {
    -webkit-appearance: none;
    appearance: none;
    background: transparent !important;
    border: 0 !important;
    box-shadow: none !important;
    padding: 0;
    color: inherit;
    width: 100%;
}

.history-card .history-open:focus-visible {
    outline: 2px solid var(--th-accent, #409cff);
    outline-offset: 2px;
    border-radius: 8px;
}

.history-card .history-meta {
    opacity: .7;
}

.history-scroll {
    max-height: 70vh;
    overflow-y: auto;
    -webkit-overflow-scrolling: touch;
}

html.theme-light .history-card {
    background: #fff !important;
    color: #000 !important;
    border-color: rgba(0, 0, 0, .12) !important;
}

html.theme-light .history-item {
    background: rgba(0, 0, 0, .04) !important;
    border-color: rgba(0, 0, 0, .10) !important;
}

html.theme-light .history-card .action-btn svg {
    stroke: #000;
}

/* Tiny menu link look */
.menu-link {
    text-align: left;
    padding: .45rem .4rem;
    font-size: 13px;
    color: #fff;
    border-radius: 10px;
    opacity: .92;
}

.menu-link:hover {
    background: rgba(255, 255, 255, .06);
    opacity: 1;
}

/* Avatar trigger chevron */
.avatar-trigger {
    position: relative;
}

.avatar-trigger::after {
    content: "";
    position: absolute;
    left: 50%;
    bottom: -6px;
    transform: translateX(-50%) rotate(0deg);
    border-left: 6px solid transparent;
    border-right: 6px solid transparent;
    border-top: 7px solid rgba(255, 255, 255, .9);
    opacity: .85;
    pointer-events: none;
}

.avatar-trigger.is-open::after {
    transform: translateX(-50%) rotate(180deg);
}

/* ======================== IMAGE BUBBLES ======================== */
.img-wrap img {
    border-radius: 16px !important;
}

.img-wrap {
    position: static;
}

.gen-wrap {
    position: sticky;
    top: calc(var(--header-h, 120px) + 8px);
    z-index: 1;
}

/* Card & shadow */
.img-card {
    position: relative;
    border-radius: 16px;
    overflow: hidden;
    border: 1px solid rgba(255, 255, 255, .10);
    background: rgba(255, 255, 255, .04);
    contain: paint;
    will-change: contents;
}

html.theme-light .img-card {
    border-color: rgba(0, 0, 0, .10);
    background: rgba(0, 0, 0, .03);
}

.img-shadow {
    position: absolute;
    inset: 0;
    border-radius: inherit;
    background: radial-gradient(60% 40% at 50% 40%, rgba(0, 0, 0, .18), transparent 70%);
    opacity: .28;
    pointer-events: none;
    filter: none;
}

.img-card.is-pending .img-shadow {
    display: none;
}

/* crisper while shimmering */

/* Skeleton */
.img-skel {
    width: 100%;
    height: 100%;
    border-radius: inherit;
    display: block;
    --skel-mid: #b9b9b9;
    --skel-dark1: #2a2a2a;
    --skel-dark2: #141414;
    background: linear-gradient(180deg, var(--skel-dark2) 0%, var(--skel-dark1) 32%, var(--skel-mid) 50%, var(--skel-dark1) 68%, var(--skel-dark2) 100%);
    background-size: 100% 240%;
    animation: sixImgShimmerY 2.8s linear infinite;
    will-change: background-position;
    contain: paint;
}

@keyframes sixImgShimmerY {
    0% {
        background-position: 0% 0%
    }

    100% {
        background-position: 0% 200%
    }
}

/* Extra skeleton types */
.img-skeleton {
    width: 100%;
    aspect-ratio: 4/3;
    position: relative;
    overflow: hidden;
    background: linear-gradient(90deg, #111 0%, #222 10%, #555 50%, #222 90%, #111 100%);
}

.img-skeleton__sheen {
    position: absolute;
    inset: 0;
    background: linear-gradient(90deg, rgba(255, 255, 255, .0) 0%, rgba(255, 255, 255, .2) 45%, rgba(255, 255, 255, .0) 100%);
    background-size: 200% 100%;
    animation: imgSheen 1.2s linear infinite;
    mix-blend-mode: overlay;
}

@keyframes imgSheen {
    from {
        background-position: 200% 0
    }

    to {
        background-position: -200% 0
    }
}

.img-skeleton__label {
    position: absolute;
    left: 0;
    right: 0;
    bottom: 10px;
    text-align: center;
    color: #e5e5e5;
    font-size: 14px;
}

/* Ripple overlay for skeleton */
.img-skeleton__ripple {
    position: absolute;
    inset: 0;
    pointer-events: none;
    background:
        radial-gradient(60% 35% at 50% 60%, rgba(255, 255, 255, .10), transparent 70%),
        radial-gradient(40% 25% at 30% 40%, rgba(255, 255, 255, .06), transparent 70%),
        radial-gradient(50% 30% at 70% 35%, rgba(255, 255, 255, .06), transparent 70%);
    animation: imgRipple 2.4s ease-in-out infinite;
    mix-blend-mode: overlay;
}

@keyframes imgRipple {
    0% {
        transform: scale(.985);
        opacity: .55
    }

    50% {
        transform: scale(1.015);
        opacity: .35
    }

    100% {
        transform: scale(.985);
        opacity: .55
    }
}

/* Real image rendering */
.img-real {
    display: block;
    width: 100%;
    height: auto;
    border-radius: inherit;
    -webkit-transform: translateZ(0);
    transform: translateZ(0);
    backface-visibility: hidden;
    image-rendering: auto;
    contain: paint;
}

/* Isolation (avoid parent repaints/flicker) */
[data-mid] .img-card,
[data-mid] .img-fade,
[data-mid] img.img-real {
    position: relative;
    z-index: 0;
    isolation: isolate;
    -webkit-transform: translateZ(0);
    transform: translateZ(0);
    backface-visibility: hidden;
}

/* ======================== GENERATION STATUS ==================== */

.gen-status {
    margin: 0 0 6px 2px;
    font-size: 13px;
    font-weight: 600;
    letter-spacing: .02em;
    text-transform: none !important;
    animation: genFade 2s ease both;
}

.gen-status .gen-title {
    text-transform: none !important;
}

.gen-status .gen-feedback {
    opacity: .92;
}

.gen-head {
    margin: 0 0 6px 2px;
    font-size: 13px;
    letter-spacing: .02em;
    display: flex;
    align-items: baseline;
    gap: 8px;
    animation: genFade .2s ease both;
}

.gen-elapsed {
    font-weight: 700;
    opacity: .95;
}

.gen-sep {
    opacity: .55
}

.gen-stage {
    opacity: .92;
    background-size: 200% 100%;
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
    text-shadow: 0 1px 0 rgba(255, 255, 255, .08), 0 -1px 0 rgba(0, 0, 0, .20), 0 0 1px rgba(0, 0, 0, .12);
    animation: typingPan 2.2s linear infinite;
}

html.theme-dark .gen-stage {
    background-image: linear-gradient(90deg, #000 0%, #fff 35%, #bdbdbd 65%, #000 100%);
}

html.theme-light .gen-stage {
    background-image: linear-gradient(90deg, #cfcfcf 0%, #ffffff 35%, #9e9e9e 65%, #1a1a1a 100%);
}

.img-stop-btn {
    font-size: 13px;
    line-height: 1;
    padding: 6px 8px;
    border-radius: 10px;
    border: 1px solid rgba(255, 255, 255, .22);
    background: rgba(255, 255, 255, .06);
}

html.theme-light .img-stop-btn {
    border-color: rgba(0, 0, 0, .18);
    background: rgba(0, 0, 0, .06);
}

.img-label {
    text-transform: none;
    letter-spacing: .02em;
    bottom: 10px;
    font-weight: 600;
}

/* Typing indicator (line-only) */
.typing-anim {
    background-size: 200% 100%;
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
    animation: taglinePan 3.2s linear infinite;
    text-shadow: 0 1px 0 rgba(255, 255, 255, 0.10), 0 -1px 0 rgba(0, 0, 0, .25), 0 0 1px rgba(0, 0, 0, .15);
}

html.theme-dark .typing-anim {
    background-image: linear-gradient(90deg, #000 0%, #fff 35%, #bdbdbd 65%, #000 100%);
}

html.theme-light .typing-anim {
    background-image: linear-gradient(90deg, #cfcfcf 0%, #ffffff 35%, #9e9e9e 65%, #1a1a1a 100%);
}

.typing-line {
    margin: 2px 4px 0 4px;
    font-size: 12px;
    letter-spacing: .02em;
    white-space: nowrap;
    background-size: 200% 100%;
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
    text-shadow: 0 1px 0 rgba(255, 255, 255, 0.08), 0 -1px 0 rgba(0, 0, 0, 0.20), 0 0 1px rgba(0, 0, 0, 0.12);
    animation: typingPan 2.2s linear infinite;
}

html.theme-dark .typing-line {
    background-image: linear-gradient(90deg, #000 0%, #fff 35%, #bdbdbd 65%, #000 100%);
    opacity: .9;
}

html.theme-light .typing-line {
    background-image: linear-gradient(90deg, #cfcfcf 0%, #ffffff 35%, #9e9e9e 65%, #1a1a1a 100%);
    opacity: .85;
}

@keyframes genFade {
    from {
        opacity: 0
    }

    to {
        opacity: 1
    }
}

@keyframes typingPan {
    from {
        background-position: 0% 50%
    }

    to {
        background-position: 200% 50%
    }
}

@keyframes taglinePan {
    from {
        background-position: 0% 50%
    }

    to {
        background-position: 200% 50%
    }
}

/* ======================== COMPOSER RING ======================== */

@property --angle {
    syntax: '<angle>';
    inherits: false;
    initial-value: 0deg;
}

.composer-shine {
    position: relative;
    border-radius: 9999px;
    background: rgba(255, 255, 255, .05);
    isolation: isolate;
}

.composer-shine::before {
    content: "";
    position: absolute;
    inset: -1.25px;
    border-radius: inherit;
    padding: 1.25px;
    background: conic-gradient(from var(--angle),
            #ffffff 0deg, #e7e7e7 40deg, #bfbfbf 90deg, #7a7a7a 140deg, #2b2b2b 200deg, #000 240deg, #2b2b2b 300deg, #bfbfbf 330deg, #fff 360deg);
    /* ▼ add standard, keep webkit */
    mask: linear-gradient(#000 0 0) content-box, linear-gradient(#000 0 0);
    mask-composite: exclude;
    /* standard */
    -webkit-mask: linear-gradient(#000 0 0) content-box, linear-gradient(#000 0 0);
    -webkit-mask-composite: xor;
    /* Safari */
    pointer-events: none;
    z-index: 0;
    filter: drop-shadow(0 0 10px rgba(255, 255, 255, .25));
    animation: ringSweep 2.8s ease-in-out infinite alternate;
}

@keyframes ringSweep {
    0% {
        --angle: 0deg
    }

    50% {
        --angle: 200deg
    }

    100% {
        --angle: 360deg
    }
}

@media (prefers-reduced-motion: reduce) {
    .composer-shine::before {
        animation: none;
    }
}

/* Light version a bit thicker */
html.theme-light .composer-shine::before {
    padding: 4.25px;
    filter: drop-shadow(0 0 16px rgba(0, 0, 0, .10));
    background: conic-gradient(from var(--angle), rgba(0, 0, 0, 0.00) 0deg, rgba(0, 0, 0, 0.65) 28deg, rgba(120, 120, 120, 0.55) 58deg, rgba(180, 180, 180, 0.35) 88deg, rgba(0, 0, 0, 0.00) 120deg);
}

/* ======================== QUICK ACTIONS ======================== */

.qa-root {
    position: fixed;
    right: max(12px, env(safe-area-inset-right, 0px) + 12px);
    bottom: calc(env(safe-area-inset-bottom, 8px) + var(--composer-h, 160px) + 6px);
    z-index: 60;
    pointer-events: none;
    transform: translateZ(0);
}

.qa-root>* {
    pointer-events: auto;
}

.qa-arrow {
    height: 28px;
    width: 28px;
    border-radius: 50%;
    display: grid;
    place-items: center;
    background: rgba(0, 0, 0, .85);
    border: 1px solid rgba(255, 255, 255, .35);
    box-shadow: 0 2px 10px rgba(0, 0, 0, .35);
    transition: transform .18s ease;
}

.qa-arrow.open svg {
    transform: rotate(180deg);
}

.qa-palette {
    position: absolute;
    right: 0;
    bottom: calc(100% + 12px);
    display: flex;
    gap: 8px;
    flex-wrap: wrap;
    padding: 6px 8px;
    background: rgba(0, 0, 0, .65);
    border: 1px solid rgba(255, 255, 255, .12);
    border-radius: 14px;
    backdrop-filter: blur(8px);
    animation: qaFloatUp .18s ease-out both;
}

@keyframes qaFloatUp {
    from {
        opacity: 0;
        transform: translateY(8px) scale(.98)
    }

    to {
        opacity: 1;
        transform: translateY(0) scale(1)
    }
}

.qpill {
    font-size: 11px;
    line-height: 1;
    padding: .35rem .6rem;
    color: #fff;
    border-radius: 9999px;
    border: 1px solid rgba(255, 255, 255, .25);
    background: rgba(255, 255, 255, .08);
    transition: filter .15s ease, transform .08s ease;
}

.qpill:hover {
    filter: brightness(1.08);
}

.qpill:active {
    transform: translateY(.5px);
}

@keyframes pageRipple {
    0% {
        opacity: .22;
        transform: scale(.8)
    }

    70% {
        opacity: .12;
        transform: scale(3.8)
    }

    100% {
        opacity: 0;
        transform: scale(5.6)
    }
}


@keyframes composerPendulum {
    0% {
        --angle: 0deg
    }

    50% {
        --angle: 185deg
    }

    100% {
        --angle: 360deg
    }
}

/* ======================== MISC POLISH ========================== */

/* “Pills” row component */
.pill-row {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 8px;
    margin-top: 12px;
}

.pill {
    font-size: 13px;
    padding: 6px 12px;
    border-radius: 999px;
    background: rgba(255, 255, 255, 0.08);
    border: 1px solid rgba(255, 255, 255, 0.12);
    color: white;
    backdrop-filter: blur(4px);
    cursor: pointer;
    transition: all .2s ease;
    max-width: 90%;
    text-align: center;
    white-space: nowrap;
}

.pill:hover {
    background: rgba(255, 255, 255, 0.14);
    transform: scale(1.04);
}

/* iOS/Safari flicker hardening */
.app-header,
.composer-root {
    -webkit-backdrop-filter: blur(12px);
    backdrop-filter: blur(12px);
    transform: translateZ(0);
    will-change: transform, opacity;
    backface-visibility: hidden;
    contain: none;
    isolation: isolate;
}

.img-card {
    contain: paint;
    will-change: contents;
}

.composer-root {
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
}

.chat-list {
    overscroll-behavior-y: contain;
}

textarea {
    caret-color: currentColor;
}

/* Only header tool “pills” (gpt-3.5 / auto / text). Restore look & make a bit shorter */
.header-pills .pill {
    height: 36px;
    /* ↓ from your old 44px */
    padding-inline: 12px;
    border-radius: 9999px;
}

/* Chat bubbles use their own class now; no more overlap with header pills */
.msg-body {
    -webkit-backdrop-filter: blur(8px) saturate(120%);
    backdrop-filter: blur(8px) saturate(120%);
}

/* Header pills only (model/speed/mode) */
.app-header .btn.btn-water {
    height: 34px;
    padding: 0 10px;
    border-radius: 9999px;
    line-height: 34px;
}

.app-header .btn.btn-water select {
    height: 34px;
    line-height: 34px;
}

/* Chat bubbles stay slim and independent */
.msg-body {
    -webkit-backdrop-filter: blur(8px) saturate(120%);
    backdrop-filter: blur(8px) saturate(120%);
}

/* ---------- Soft Ring utilities ---------- */
.sr-ring {
    position: relative;
    z-index: 0;
}

/* creates a stacking context */
.sr-ring::after {
    content: "";
    position: absolute;
    inset: calc(-1 * var(--sr, 12px));
    /* ring thickness outside element */
    border-radius: inherit;
    /* keep it perfectly round */
    pointer-events: none;
    z-index: -1;
    /* behind orb contents */
    border: 1px solid rgba(255, 255, 255, .18);

}

/* light theme tweak */
html.theme-light .sr-ring::after {
    border-color: rgba(0, 0, 0, .12);
    box-shadow:
        0 0 0 calc(var(--sr, 12px)) rgba(0, 0, 0, .06),
        0 8px 28px rgba(0, 0, 0, .18);
}

/* sizes */
.sr-12 {
    --sr: 12px;
}

.sr-16 {
    --sr: 16px;
}

.sr-20 {
    --sr: 20px;
}

.sr-24 {
    --sr: 24px;
}

/* optional: force round if you reuse it on non-circles */
.round {
    border-radius: 50% !important;
}



/* textarea style */
.composer-ta {
    width: 100%;
    background: transparent;
    outline: none;
    font-size: 16px;
    line-height: 20px;
    padding: 6px 6px;
    resize: none;
}

/* attachment chip */
.att-chip .abs-x {
    position: absolute;
    top: -8px;
    right: -8px;
    height: 24px;
    width: 24px;
    border-radius: 999px;
    background: rgba(0, 0, 0, .8);
    border: 1px solid rgba(255, 255, 255, .2);
    display: grid;
    place-items: center;
}

.att-chip.is-loading .thumb {
    filter: blur(1.2px) saturate(.85);
}

/* spinner */
.spinner {
    width: 16px;
    height: 16px;
    border-radius: 999px;
    border: 2px solid rgba(255, 255, 255, .6);
    border-top-color: transparent;
    animation: spin .8s linear infinite;
}

@keyframes spin {
    to {
        transform: rotate(360deg);
    }
}

/* attachments row spacing on small screens */
.attachments-row {
    scrollbar-width: thin;
}

/* Shape + transitions */
.composer-shine {
    transition: border-radius .18s ease, padding .18s ease, box-shadow .18s ease;
}

/* When files exist, turn into a rounded rectangle and add a top row */
.composer-shine.has-files {
    display: grid;
    grid-template-rows: auto auto;
    /* attachments row + input row */
    row-gap: 6px;
    padding-top: 6px;
}

/* Attachments strip */
.attachments-row {
    display: flex;
    gap: 8px;
    overflow-x: auto;
    padding: 6px 6px 4px;
    border-bottom: 1px solid rgba(255, 255, 255, .08);
}

/* Attachment chip */
.att-chip {
    position: relative;
    display: flex;
    align-items: center;
    gap: 8px;
    padding: 8px 36px 8px 8px;
    /* room for the close button */
    background: rgba(255, 255, 255, .92);
    color: #111;
    border: 1px solid rgba(0, 0, 0, .08);
    border-radius: 12px;
    box-shadow: 0 1px 2px rgba(0, 0, 0, .08);
}

.att-chip .thumb {
    position: relative;
    width: 72px;
    height: 54px;
    border-radius: 10px;
    overflow: hidden;
    background: rgba(0, 0, 0, .06);
    display: grid;
    place-items: center;
}

.att-chip .thumb .fit {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

.att-chip .thumb .veil {
    position: absolute;
    inset: 0;
    background: rgba(0, 0, 0, .45);
    display: grid;
    place-items: center;
}

.att-chip .meta {
    min-width: 0;
    max-width: 170px;
}

.att-chip .nm {
    font-size: 12px;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

.att-chip .sz {
    font-size: 11px;
    opacity: .6;
}

/* Black circular remove button with white X */
.att-x {
    position: absolute;
    top: 6px;
    right: 6px;
    width: 26px;
    height: 26px;
    border-radius: 999px;
    background: #000;
    display: grid;
    place-items: center;
    border: 1px solid rgba(255, 255, 255, .25);
}

.att-x:hover {
    filter: brightness(1.06);
}

.att-x:active {
    transform: scale(.96);
}

/* Optional tiny spinner */
.spinner {
    width: 16px;
    height: 16px;
    border: 2px solid rgba(255, 255, 255, .6);
    border-top-color: transparent;
    border-radius: 999px;
    animation: spin .8s linear infinite;
}

@keyframes spin {
    to {
        transform: rotate(360deg);
    }
}

/* subtle frosted look for inline header nav if you want it */
.header-flow {
    border-top: 1px solid rgba(255, 255, 255, 0.10);
}

@media (min-width: 768px) {
    .hdr-compact .btn.btn-water {
        height: 28px;
        padding: 0 8px;
        font-size: 11px;
        border-radius: 9999px
    }

    .hdr-compact select {
        font-size: 11px
    }
}

/* GLASS DROPDOWN */
.select-trigger {
    min-height: 34px;
}

.glass-dd {
    z-index: 9999;
    border-radius: 14px;
    border: 1px solid rgba(255, 255, 255, .18);
    background: rgba(20, 20, 20, .72);
    -webkit-backdrop-filter: blur(16px);
    backdrop-filter: blur(16px);
    box-shadow: 0 10px 30px rgba(0, 0, 0, .35), inset 0 1px 0 rgba(255, 255, 255, .05);
    padding: 6px;
}

.glass-dd__list {
    max-height: 260px;
    overflow: auto;
}

.glass-dd__item {
    width: 100%;
    text-align: left;
    font-size: 13px;
    line-height: 1;
    padding: 10px 12px;
    border-radius: 10px;
    color: #f2f2f2;
    background: transparent;
    border: 1px solid transparent;
}

.glass-dd__item:hover {
    background: rgba(255, 255, 255, .07);
}

.glass-dd__item.is-active {
    background: rgba(255, 255, 255, .12);
    border-color: rgba(255, 255, 255, .18);
}

/* ===== ANDROID / LOW-MEM SMOOTH MODE ===== */

.android-smooth .app-header,
.android-smooth .composer-root {
    /* drop the live blur on fixed layers; use translucent fill instead */
    -webkit-backdrop-filter: none !important;
    backdrop-filter: none !important;
    background: rgba(8, 8, 8, .86) !important;
    /* light theme auto-inverts via tokens */
    box-shadow: 0 1px 0 rgba(255, 255, 255, .08) inset;
}

/* stop the animated conic-gradient ring (very costly on Android GPUs) */
.android-smooth .composer-shine::before {
    animation: none !important;
    filter: none !important;
    padding: 0 !important;
    background: rgba(255, 255, 255, .06) !important;
    /* remove masks which force extra compositing */
    -webkit-mask: none !important;
    mask: none !important;
}

/* chat bubbles: replace blur with a flat translucent fill */
.android-smooth .msg-body {
    -webkit-backdrop-filter: none !important;
    backdrop-filter: none !important;
    background: rgba(255, 255, 255, .06) !important;
}

/* image cards: drop heavy shadows */
.android-smooth .img-card {
    box-shadow: none !important;
}

/* make offscreen messages skip layout/paint until scrolled into view */
.android-smooth .chat-list>* {
    content-visibility: auto;
    contain-intrinsic-size: 0 140px;
    /* reserve space; adjust if your bubbles are taller */
}

/* scroll container polish */
.android-smooth .chat-list {
    overscroll-behavior-y: contain;
    /* already set, keep it */
    -webkit-overflow-scrolling: auto;
    /* iOS only; harmless on Android */
}

/* ===== THEME PANEL (glass slide-in on desktop) ===== */
.theme-btn {
    height: 36px;
    width: 36px;
    border-radius: 9999px;
    display: grid;
    place-items: center;
    border: 1px solid rgba(255, 255, 255, .22);
    background: rgba(255, 255, 255, .06);
}

@media (min-width:768px) {
    .theme-panel {
        position: fixed;
        z-index: 99;
        border-radius: 16px;
        overflow: hidden;
        border: 1px solid rgba(255, 255, 255, .18);
        background: rgba(20, 20, 20, .75);
        -webkit-backdrop-filter: blur(16px);
        backdrop-filter: blur(16px);
        box-shadow: 0 10px 30px rgba(0, 0, 0, .35);
        width: 340px;
        max-height: 70vh;
        animation: slideIn .18s ease-out both;
    }

    @keyframes slideIn {
        from {
            opacity: 0;
            transform: translateX(12px)
        }

        to {
            opacity: 1;
            transform: none
        }
    }
}

@media (max-width:767px) {
    .theme-panel {
        position: fixed;
        left: 50%;
        transform: translateX(-50%);
        bottom: env(safe-area-inset-bottom, 12px);
        width: min(96vw, 420px);
        max-height: 72vh;
        border-radius: 18px;
        overflow: hidden;
        border: 1px solid rgba(255, 255, 255, .16);
        background: rgba(15, 15, 15, .82);
        -webkit-backdrop-filter: blur(14px);
        backdrop-filter: blur(14px);
    }
}

/* panel internals */
.theme-head {
    padding: 10px 12px;
    border-bottom: 1px solid rgba(255, 255, 255, .12);
    display: flex;
    align-items: center;
    gap: 8px
}

.theme-title {
    font-size: 13px;
    opacity: .9;
    font-weight: 700;
    letter-spacing: .02em
}

.theme-row {
    padding: 10px 12px;
    display: grid;
    gap: 8px
}

.theme-sub {
    font-size: 12px;
    opacity: .7;
    margin-bottom: 4px
}

/* horizontal mini-scroll for palettes (shows 4, scrolls for more) */
.palette-row {
    display: grid;
    grid-auto-flow: column;
    grid-auto-columns: minmax(72px, 72px);
    gap: 10px;
    overflow-x: auto;
    padding-bottom: 6px;
    scroll-snap-type: x mandatory;
}

.palette-row::-webkit-scrollbar {
    height: 6px
}

.palette-row::-webkit-scrollbar-thumb {
    background: rgba(255, 255, 255, .18);
    border-radius: 999px
}

/* swatch */
.swatch {
    width: 72px;
    height: 72px;
    border-radius: 14px;
    border: 1px solid rgba(255, 255, 255, .22);
    display: flex;
    align-items: flex-end;
    justify-content: center;
    padding: 6px;
    scroll-snap-align: center;
}

.swatch span {
    font-size: 11px;
    line-height: 1;
    background: rgba(0, 0, 0, .5);
    color: #fff;
    padding: 4px 6px;
    border-radius: 8px;
}

/* selected */
.swatch.is-active {
    outline: 2px solid #fff;
    outline-offset: 2px
}

/* backdrop for outside-click close (only closes theme panel) */
.theme-backdrop {
    position: fixed;
    inset: 0;
    z-index: 98;
    background: transparent
}

/* ===== GLOBAL THEME TOKENS ===== */
:root {
    --th-bg: #000;
    /* updated by JS */
    --th-text: #fff;
    --th-btn-bg: rgba(255, 255, 255, .06);
    --th-btn-bd: rgba(255, 255, 255, .16);
}

.theme-dark {
    color-scheme: dark;
}

.theme-light {
    color-scheme: light;
}

.btn {
    color: var(--th-text);
    transition: transform .06s ease, box-shadow .2s ease;
}

.btn.btn-water {
    background: var(--th-btn-bg);
    border: 1px solid var(--th-btn-bd);
    border-radius: 999px;
}

.btn:active {
    transform: translateY(0.5px) scale(.99);
}

/* header & composer tint (no pure black) */
.app-header, .composer-root {
    backdrop-filter: blur(14px);
    -webkit-backdrop-filter: blur(14px);
    border-color: rgba(255, 255, 255, .1);
}

.theme-dark .app-header, .theme-dark .composer-root {
    background: rgba(14, 14, 14, .82);
}

.theme-light .app-header, .theme-light .composer-root {
    background: rgba(255, 255, 255, .82);
}

.swatch:active::after {
    content: "";
    position: absolute;
    inset: 0;
    border-radius: 14px;
    box-shadow: 0 0 0 8px rgba(255, 255, 255, .15) inset;
    animation: wobble .3s ease;
}

@keyframes wobble {
    50% {
        transform: scale(.98);
    }
}

.anim-strip {
    display: flex;
    gap: 6px;
    margin-left: 6px;
    margin-right: auto;
    overflow: auto;
    padding-bottom: 4px;
    scrollbar-width: none;
}

.anim-tile {
    min-width: 56px;
    height: 36px;
    border-radius: 12px;
    border: 1px solid rgba(255, 255, 255, .2);
    position: relative;
    overflow: hidden;
    background: rgba(255, 255, 255, .04);
}

.anim-tile span {
    position: absolute;
    inset: auto 6px 6px 6px;
    font-size: 10px;
    opacity: .8;
}

.anim-tile.is-active {
    outline: 2px solid #fff;
    outline-offset: 2px;
}

/* tiny live preview inside each anim tile */
.anim-tile[data-anim]:before {
    content: "";
    position: absolute;
    inset: 0;
    pointer-events: none;
    opacity: .9;
    background: #000;
}

.theme-light .anim-tile {
    border-color: rgba(0, 0, 0, .15);
    background: rgba(0, 0, 0, .06);
}

.theme-light .anim-tile.is-active {
    outline-color: #000;
}

/* ===== GLOBAL LIVE ANIMATIONS (applies everywhere) ===== */
body {
    position: relative;
}

body::before, body::after {
    content: "";
    position: fixed;
    inset: 0;
    z-index: -1;
    pointer-events: none;
}

body[data-anim="none"]::before, body[data-anim="none"]::after {
    content: none;
}

/* 1. Matrix */
@keyframes mDrop {
    to {
        transform: translateY(100%);
    }
}

body[data-anim="matrix"]::before {
    background:
        repeating-linear-gradient(transparent 0 28px, rgba(255, 255, 255, .05) 28px 29px),
        linear-gradient(#0b0f0c, #0b0f0c);
}

body[data-anim="matrix"]::after {
    background:
        repeating-linear-gradient(180deg, rgba(0, 255, 140, .22), rgba(0, 255, 140, .22) 2px, transparent 2px 32px);
    transform: translateY(-100%);
    animation: mDrop 18s linear infinite;
}

/* 2. Aqua */
@keyframes aquaWaves {
    to {
        background-position: 200% 0, -200% 100%;
    }
}

body[data-anim="aqua"]::before {
    background:
        radial-gradient(60% 80% at 20% 10%, rgba(0, 180, 255, .25), transparent 60%),
        radial-gradient(60% 80% at 80% 90%, rgba(0, 255, 200, .28), transparent 60%),
        linear-gradient(#02070a, #02070a);
    background-size: 200% 200%, 200% 200%, auto;
    animation: aquaWaves 24s linear infinite;
}

/* 3. Aurora */
@keyframes auroraShift {
    50% {
        filter: hue-rotate(60deg)
    }
}

body[data-anim="aurora"]::before {
    background:
        radial-gradient(40% 60% at 20% 20%, rgba(255, 0, 200, .18), transparent 60%),
        radial-gradient(50% 60% at 80% 80%, rgba(0, 230, 255, .20), transparent 60%),
        radial-gradient(60% 80% at 50% 50%, rgba(0, 255, 128, .20), transparent 60%),
        #0a0c12;
    animation: auroraShift 14s ease-in-out infinite;
}

/* 4. Grid scan */
@keyframes scan {
    to {
        background-position: 0 100%;
    }
}

body[data-anim="grid-scan"]::before {
    background:
        linear-gradient(0deg, rgba(255, 255, 255, .06) 1px, transparent 1px) 0 0/100% 32px,
        linear-gradient(90deg, rgba(255, 255, 255, .06) 1px, transparent 1px) 0 0/32px 100%,
        #0b0d10;
}

body[data-anim="grid-scan"]::after {
    background: linear-gradient(180deg, transparent, rgba(0, 255, 255, .18), transparent);
    mix-blend-mode: screen;
    background-size: 100% 200%;
    animation: scan 10s linear infinite;
}

/* 5. Warp stars */
@keyframes warp {
    to {
        background-position: 400% 0;
    }
}

body[data-anim="warp"]::before {
    background:
        radial-gradient(1px 1px at 20% 30%, rgba(255, 255, 255, .6) 50%, transparent 51%),
        radial-gradient(1px 1px at 50% 60%, rgba(255, 255, 255, .5) 50%, transparent 51%),
        radial-gradient(1px 1px at 80% 40%, rgba(255, 255, 255, .4) 50%, transparent 51%),
        #050608;
    background-size: 25% 25%, 25% 25%, 25% 25%, auto;
    animation: warp 30s linear infinite;
}

/* 6. Neon lines */
@keyframes neonSlide {
    to {
        background-position: 200% 0;
    }
}

body[data-anim="neon-lines"]::before {
    background:
        repeating-linear-gradient(120deg, rgba(0, 255, 200, .22) 0 6px, transparent 6px 24px),
        linear-gradient(#090909, #0f0f13);
    background-size: 200% 100%, auto;
    animation: neonSlide 18s linear infinite;
}

/* 7. Lava lamp */
@keyframes blobs {
    50% {
        transform: translateY(-4%) scale(1.05)
    }
}

body[data-anim="lava"]::before {
    background:
        radial-gradient(40% 35% at 20% 80%, rgba(255, 120, 0, .18), transparent 60%),
        radial-gradient(45% 40% at 80% 20%, rgba(255, 0, 100, .18), transparent 60%),
        #0b0b0b;
    animation: blobs 12s ease-in-out infinite;
}

/* 8. Clouds */
@keyframes clouds {
    to {
        background-position: 200% 0;
    }
}

body[data-anim="clouds"]::before {
    background:
        radial-gradient(100px 80px at 10% 20%, rgba(255, 255, 255, .06), transparent 60%),
        radial-gradient(120px 90px at 60% 60%, rgba(255, 255, 255, .06), transparent 60%),
        #0c0e11;
    background-size: 200% 100%, 200% 100%, auto;
    animation: clouds 60s linear infinite;
}

/* 9. Waves */
@keyframes waveMove {
    to {
        background-position: 200% 0, -200% 100%;
    }
}

body[data-anim="waves"]::before {
    background:
        radial-gradient(60% 50% at 30% 70%, rgba(255, 255, 255, .04), transparent 60%),
        radial-gradient(50% 60% at 70% 30%, rgba(255, 255, 255, .04), transparent 60%),
        #0b1216;
    background-size: 150% 100%, 150% 100%, auto;
    animation: waveMove 32s linear infinite;
}

/* 10. Particles */
@keyframes floatDots {
    to {
        transform: translateY(-6%);
    }
}

body[data-anim="particles"]::before {
    background:
        radial-gradient(2px 2px at 10% 90%, rgba(255, 255, 255, .25), transparent 60%),
        radial-gradient(2px 2px at 30% 70%, rgba(255, 255, 255, .18), transparent 60%),
        radial-gradient(2px 2px at 70% 40%, rgba(255, 255, 255, .2), transparent 60%),
        #0a0b0e;
    animation: floatDots 20s ease-in-out infinite alternate;
}

/* 11. Circuit board */
@keyframes scanline {
    to {
        background-position: 0 200%;
    }
}

body[data-anim="circuit"]::before {
    background:
        linear-gradient(90deg, rgba(0, 255, 140, .18) 1px, transparent 1px) 0 0/24px 100%,
        linear-gradient(0deg, rgba(0, 255, 140, .18) 1px, transparent 1px) 0 0/100% 24px,
        #0b0d0b;
}

body[data-anim="circuit"]::after {
    background: linear-gradient(180deg, transparent, rgba(0, 255, 140, .1), transparent);
    background-size: 100% 200%;
    animation: scanline 12s linear infinite;
}

/* 12–15. Camouflage (animated shimmer over tiled SVG) */
@keyframes camoShimmer {
    50% {
        filter: brightness(1.08);
    }
}

body[data-anim="camo-woodland"]::before {
    background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='320' height='320'><rect width='100%' height='100%' fill='%232c3b27'/><g fill='%233f4f32'><path d='M0,60c40,40,120,10,160,40S240,160,320,120V0H0Z'/></g><g fill='%235a6b3f'><path d='M0,200c60-20,120,60,200,40s80-40,120,0v80H0Z'/></g><g fill='%231f261b' opacity='.7'><path d='M80,0c20,60,80,60,140,80S320,40,320,0Z'/></g></svg>");
    background-size: 420px 420px;
    background-color: #2c3b27;
    animation: camoShimmer 8s ease-in-out infinite;
}

body[data-anim="camo-desert"]::before {
    background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='320' height='320'><rect width='100%' height='100%' fill='%23b9a56a'/><g fill='%23d6c189'><path d='M0,60c40,40,120,10,160,40S240,160,320,120V0H0Z'/></g><g fill='%238a7a4b'><path d='M0,200c60-20,120,60,200,40s80-40,120,0v80H0Z'/></g></svg>");
    background-size: 420px 420px;
    background-color: #b9a56a;
    animation: camoShimmer 8s ease-in-out infinite;
}

body[data-anim="camo-urban"]::before {
    background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='320' height='320'><rect width='100%' height='100%' fill='%232d3137'/><g fill='%23454a52'><path d='M0,60c40,40,120,10,160,40S240,160,320,120V0H0Z'/></g><g fill='%231a1d22'><path d='M0,200c60-20,120,60,200,40s80-40,120,0v80H0Z'/></g></svg>");
    background-size: 420px 420px;
    background-color: #2d3137;
    animation: camoShimmer 8s ease-in-out infinite;
}

body[data-anim="camo-digital"]::before {
    background:
        repeating-linear-gradient(0deg, #223 0 8px, #1a1f2a 8px 16px),
        repeating-linear-gradient(90deg, rgba(255, 255, 255, .03) 0 8px, transparent 8px 16px);
    background-blend-mode: multiply;
}

/* live previews inside tiles use same backgrounds */
.anim-tile[data-anim="matrix"]::before {
    background: linear-gradient(#0b0f0c, #0b0f0c);
}

.anim-tile[data-anim="aqua"]::before {
    background: radial-gradient(circle at 30% 20%, rgba(0, 200, 255, .35), transparent 50%), #041018;
}

.anim-tile[data-anim="aurora"]::before {
    background: linear-gradient(130deg, #4af, #f0f);
    filter: saturate(1.2);
}

.anim-tile[data-anim="grid-scan"]::before {
    background: linear-gradient(0deg, rgba(255, 255, 255, .2) 1px, transparent 1px) 0/100% 12px, #101214;
}

.anim-tile[data-anim="warp"]::before {
    background: radial-gradient(closest-side, #fff 1px, transparent 1px) 0/12px 12px, #06080a;
}

.anim-tile[data-anim="neon-lines"]::before {
    background: repeating-linear-gradient(120deg, rgba(0, 255, 200, .4) 0 4px, transparent 4px 12px), #0b0b0e;
}

.anim-tile[data-anim="lava"]::before {
    background: radial-gradient(closest-corner, #f60, transparent 60%), #0b0b0b;
}

.anim-tile[data-anim="clouds"]::before {
    background: radial-gradient(closest-corner, rgba(255, 255, 255, .4), transparent 60%), #0c0e11;
}

.anim-tile[data-anim="waves"]::before {
    background: radial-gradient(closest-corner, rgba(255, 255, 255, .25), transparent 60%), #0b1216;
}

.anim-tile[data-anim="particles"]::before {
    background: radial-gradient(2px 2px at 50% 50%, #fff, transparent 60%), #0a0b0e;
}

.anim-tile[data-anim="circuit"]::before {
    background: linear-gradient(90deg, rgba(0, 255, 140, .5) 1px, transparent 1px) 0/10px 100%, #0b0d0b;
}

.anim-tile[data-anim="camo-woodland"]::before {
    background: #2c3b27;
}

.anim-tile[data-anim="camo-desert"]::before {
    background: #b9a56a;
}

.anim-tile[data-anim="camo-urban"]::before {
    background: #2d3137;
}

.anim-tile[data-anim="camo-digital"]::before {
    background: #1a1f2a;
}

/* ========= CORE PAGE BACKDROP & TRANSITIONS ========= */
html, body {
    background: var(--th-bg, #000);
}

:root[data-anim] body {
    background-attachment: fixed;
    background-repeat: no-repeat;
    transition: background 400ms ease, filter 400ms ease;
}

/* Keep the app transparent when an animation is active. (Your JS already sets --page-bg) */
[data-anim] .min-h-svh {
    background: transparent !important;
}

/* ========= ICON LEGIBILITY ON DARK/LIGHT ========= */
.composer-root button,
.composer-root button svg,
.msg-actions button,
.msg-actions button svg {
    color: var(--icon-fg);
    stroke: currentColor;
    fill: currentColor;
}

/* --- Theme panel vertical scrolling --- */
.theme-panel {
    max-height: min(78vh, 640px);
    overflow-y: auto;
}

.hscroll-bar {
    display: grid;
    grid-auto-flow: column;
    align-items: center;
    justify-content: center;
    gap: 6px;
    padding: 2px 0 8px;
}

.hscroll-bar .hs-arrow {
    width: 22px;
    height: 22px;
    border-radius: 999px;
    border: 1px solid var(--th-border, rgba(255, 255, 255, .18));
    background: var(--th-surface, rgba(0, 0, 0, .14));
    color: var(--th-text, #fff);
    display: grid;
    place-items: center;
    line-height: 1;
    font-size: 12px;
}

.hscroll-row {
    position: relative;
}

.hscroll-wrap {
    display: flex;
    gap: 10px;
    overflow-x: auto;
    overscroll-behavior-x: contain;
    scrollbar-width: none;
    -ms-overflow-style: none;
}

.hscroll-wrap::-webkit-scrollbar {
    display: none;
}

.hscroll-bar {
    display: grid;
    grid-auto-flow: column;
    gap: 6px;
    align-items: center;
    justify-content: center;
    padding: 2px 0 8px;
}

.hscroll-bar .hs-arrow {
    width: 22px;
    height: 22px;
    border-radius: 999px;
    border: 1px solid var(--th-border, rgba(255, 255, 255, .18));
    background: var(--th-surface, rgba(0, 0, 0, .14));
    color: var(--th-text, #fff);
    display: grid;
    place-items: center;
    font-size: 12px;
    line-height: 1;
}

/* --- THEME PANEL scrollers --- */
.theme-panel .row-block,
.theme-panel .theme-row {
    overflow: visible !important;
    /* stop clipping the slider under rows */
}

.theme-panel .hscroll-row {
    position: relative;
}

.theme-panel .hscroll-wrap {
    display: flex;
    gap: 10px;
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
    scrollbar-width: none;
    /* Firefox */
}

.theme-panel .hscroll-wrap::-webkit-scrollbar {
    display: none;
}

/* Some setups hide inputs broadly in the panel. Re-enable our range. */
.theme-panel .hscroll-bar input[type="range"] {
    display: inline-block !important;
    width: 140px;
    /* feel free to tweak */
    height: 18px;
}

.theme-panel .hscroll-bar {
    display: grid !important;
    /* force visible even if a global rule hid it */
    grid-auto-flow: column;
    gap: 6px;
    align-items: center;
    justify-content: center;
    margin-top: 6px;
    /* puts the slider under each row */
    padding-bottom: 6px;
    pointer-events: auto;
}

.theme-panel .hs-arrow {
    width: 22px;
    height: 22px;
    border-radius: 999px;
    border: 1px solid var(--th-border, rgba(255, 255, 255, .18));
    background: var(--th-surface, rgba(0, 0, 0, .14));
    color: var(--th-text, #fff);
    display: grid;
    place-items: center;
    font-size: 12px;
    line-height: 1;
}

/* Default page bg (safe fallback) */
html, body {
    background: var(--th-bg, #000);
}

/* ===== LIVE BACKGROUND ENGINE (animated) ===== */
:root[data-anim] body {
    background: none !important;
}

:root[data-anim] body::before {
    content: "";
    position: fixed;
    inset: 0;
    z-index: -1;
    pointer-events: none;
    will-change: transform, opacity, background-position, filter;
    transition: opacity .3s ease;
    opacity: 1;
}

/* Generic helpers */
@keyframes pan-x {
    from {
        background-position: 0 0
    }

    to {
        background-position: 600px 0
    }
}

@keyframes pan-y {
    from {
        background-position: 0 0
    }

    to {
        background-position: 0 600px
    }
}

@keyframes pan-slow {
    0% {
        background-position: 0 0
    }

    50% {
        background-position: 100% 60%
    }

    100% {
        background-position: 0 0
    }
}

@keyframes pulse {
    0%, 100% {
        transform: scale(1);
    }

    50% {
        transform: scale(1.06);
    }
}

/* Accessibility: if OS has “Reduce motion”, you can keep animations but slower, or disable.
Comment the next block if you want full motion regardless. */
@media (prefers-reduced-motion: reduce) {
    :root[data-anim] body::before {
        animation-duration: 0s !important;
        animation: none !important;
    }
}

.msg-actions {
    color: var(--icon-fg);
}

/* new orb
/* theme-proof, standalone styles (do NOT rely on site tokens) */
.landing-orb-wrap {
    display: grid;
    place-items: center;
    padding: clamp(12px, 4vw, 28px);
    pointer-events: none;
    /* purely decorative */
}

/* main sphere */
.landing-orb {
    --orb-size: 320px;
    --ring-w: 5px;
    /* ring thickness */
    width: var(--orb-size);
    height: var(--orb-size);
    border-radius: 50%;
    position: relative;
    isolation: isolate;
    /* keep effects inside */
    transform-style: preserve-3d;
    will-change: transform, filter;
    /* bevelled 3D look (no transparency; not theme-driven) */
    background:
        radial-gradient(60% 60% at 35% 28%, #ffffff, #dcdcdc 18%, rgba(0, 0, 0, 0) 40%),
        radial-gradient(140% 140% at 70% 75%, #fefefe 35%, #ffffff 62%, #000 86%),
        radial-gradient(80% 80% at 30% 30%, #fffefe, #fffcfc 66%);
    box-shadow:
        inset 0 -18px 38px rgb(255, 254, 254),
        inset 0 22px 38px rgb(255, 255, 255),
        0 20px 60px rgba(0, 0, 0, .55);
    animation: orb-wobble var(--orb-wobble-s, 4.2s) ease-in-out infinite both;
}

/* metallic rotating ring that hugs the orb */
/* metallic rotating ring + slow sun-glint */
.landing-orb::before {
    content: "";
    position: absolute;
    inset: calc(var(--ring-w) * -1);
    border-radius: 80%;
    /* cut center so it becomes a ring */
    -webkit-mask: radial-gradient(farthest-side, transparent calc(100% - var(--ring-w)), #fffdfd calc(100% - var(--ring-w) + 0.5px));
    mask: radial-gradient(farthest-side, transparent calc(100% - var(--ring-w)), #000 calc(100% - var(--ring-w) + 0.5px));

    /* base metal + a bright wedge that looks like sun reflection */
    background:
        conic-gradient(from 0deg,
            transparent 0 77%,
            rgba(255, 255, 255, .95) 80% 86%,
            /* the glint */
            transparent 90% 100%),
        conic-gradient(from 0deg, #ffffff, #000000, #fffcfc, #b9b9b9);

    animation: ring-spin 8s linear infinite;
    /* slow rotation */
    filter: drop-shadow(0 2px 10px rgb(255, 255, 255));
    pointer-events: none;
    z-index: 0;
}

/* already present, keep it */
@keyframes ring-spin {
    to {
        transform: rotate(360deg);
    }
}

/* specular highlights for extra depth */
.landing-orb::after {
    content: "";
    position: absolute;
    inset: 0;
    border-radius: inherit;
    background:
        radial-gradient(65% 65% at 32% 26%, rgb(255, 255, 255), transparent 60%),
        radial-gradient(80% 80% at 66% 72%, rgb(245, 241, 241), transparent 66%);
    mix-blend-mode: screen;
    pointer-events: none;
}

/* label */
.orb-label {
    position: relative;
    z-index: 1;
    color: #fff;
    /* fixed white on dark */
    font-weight: 800;
    letter-spacing: .06em;
    text-shadow: 0 1px 2px rgba(0, 0, 0, .55);
    font-size: clamp(18px, 3.4vw, 28px);
    user-select: none;
}

/* animations */
@keyframes orb-wobble {
    0%, 100% {
        transform: rotateX(0deg) rotateY(0deg) translateZ(0);
    }

    25% {
        transform: rotateX(6deg) rotateY(-6deg) translateZ(0);
    }

    50% {
        transform: rotateX(0deg) rotateY(0deg) translateZ(0);
    }

    75% {
        transform: rotateX(-6deg) rotateY(6deg) translateZ(0);
    }
}

@keyframes ring-spin {
    to {
        transform: rotate(360deg);
    }
}

/* respectful motion */
@media (prefers-reduced-motion: reduce) {
    .landing-orb {
        animation: none;
    }

    .landing-orb::before {
        animation: none;
    }
}

/* end of new orb */

/* center the label inside the sphere */
.landing-orb {
    /* keep your existing properties … */
    display: grid;
    /* NEW */
    place-items: center;
    /* NEW */
    overflow: hidden;
    /* keeps label glow inside the orb */
}

/* Engraved (debossed) label */
.orb-label {
    position: absolute;
    /* force perfect centering */
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);

    /* typography */
    font-weight: 900;
    letter-spacing: .08em;
    text-transform: uppercase;
    font-size: clamp(22px, 3.8vw, 36px);

    /* carved look: base tone close to the sphere, not greyed out */
    color: #e9e9e9;

    /* thin stroke + inverted highlights for an "inscribed" feel */
    -webkit-text-stroke: .35px rgba(0, 0, 0, .35);

    /* inner shadow (top-left) + inner highlight (bottom-right) */
    text-shadow:
        -1px -1px 0 rgba(0, 0, 0, .60),
        /* dark ridge, top-left */
        1px 1px 0 rgba(255, 255, 255, 0.005),
        /* light ridge, bottom-right */
        -2px -2px 2px rgba(0, 0, 0, .22),
        2px 2px 2px rgb(255, 255, 255);

    /* blend into the orb so it feels etched, not floating above */
    mix-blend-mode: multiply;

    pointer-events: none;
    user-select: none;
    z-index: 1;
    /* above the ring but visually "inside" via blending */
}

/* OPTIONAL: stronger etched effect by duplicating the glyph as light/dark layers.
Works best if you add data-text="6IX AI" on the span (fallback is fine without). */
.orb-label::before,
.orb-label::after {
    position: absolute;
    inset: 0;
    pointer-events: none;
    content: attr(data-text);
}

.orb-label::before {
    /* inner dark edge */
    color: rgba(0, 0, 0, .55);
    filter: blur(.6px);
    transform: translate(-0.6px, -0.6px);
    opacity: .7;
    mix-blend-mode: multiply;
}

.orb-label::after {
    /* inner light edge */
    color: rgba(255, 255, 255, .70);
    filter: blur(.6px);
    transform: translate(0.6px, 0.6px);
    opacity: .45;
    mix-blend-mode: screen;
}

/* ===== THEME PANEL (scoped) ===== */
.six-theme__backdrop {
    position: fixed;
    inset: 0;
    background: rgba(0, 0, 0, .5);
    backdrop-filter: blur(6px);
    z-index: 98;
}

.six-theme__panel {
    position: fixed;
    z-index: 99;
    width: 340px;
    max-width: 92vw;
    background: rgba(12, 12, 12, .92);
    color: #fff;
    border: 1px solid rgba(255, 255, 255, .14);
    border-radius: 16px;
    box-shadow: 0 10px 50px rgba(0, 0, 0, .5);
    padding: 12px 12px 16px;
    overflow: hidden;
}

.six-theme__panel--mobile {
    /* centered medium modal on iOS/Android */
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
}

.six-theme__head {
    display: flex;
    align-items: center;
    gap: 8px;
}

.six-theme__title {
    font-weight: 700;
    font-size: 15px;
}

.six-theme__modes {
    margin-left: auto;
    display: flex;
    gap: 6px;
}

.six-theme__btn {
    font-size: 12px;
    padding: 4px 8px;
    border-radius: 10px;
    background: #1b1b1b;
    border: 1px solid rgba(255, 255, 255, .14);
}

.six-theme__btn.is-active {
    outline: 1px solid rgba(255, 255, 255, .35);
}

.six-theme__sectionLabel {
    margin: 10px 2px 6px;
    font-size: 12px;
    opacity: .8;
}

.six-theme__hscroll {
    position: relative;
}

.six-theme__hwrap {
    display: flex;
    gap: 10px;
    overflow: auto;
    padding: 2px;
    scroll-snap-type: x proximity;
}

.six-theme__hwrap::-webkit-scrollbar {
    height: 6px;
}

.six-theme__hwrap::-webkit-scrollbar-thumb {
    background: rgba(255, 255, 255, .18);
    border-radius: 4px;
}

.six-theme__anims {
    display: flex;
    gap: 10px;
}

.six-theme__animCard {
    position: relative;
    width: 140px;
    height: 78px;
    border-radius: 12px;
    border: 1px solid rgba(255, 255, 255, .14);
    overflow: hidden;
    scroll-snap-align: start;
}

.six-theme__animCard.is-active {
    outline: 2px solid rgba(255, 255, 255, .35);
}

.six-theme__animCard video {
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block;
}

.six-theme__animCard>span {
    position: absolute;
    left: 8px;
    bottom: 6px;
    font-size: 11px;
    background: rgba(0, 0, 0, .45);
    padding: 2px 6px;
    border-radius: 8px;
}

.six-theme__swatches {
    display: flex;
    gap: 10px;
}

.six-theme__swatch {
    min-width: 110px;
    height: 40px;
    border-radius: 12px;
    border: 1px solid rgba(255, 255, 255, .14);
    display: grid;
    place-items: center;
    font-size: 12px;
    padding: 0 8px;
}

.six-theme__swatch.is-active {
    outline: 2px solid rgba(255, 255, 255, .35);
}

.six-theme__swatch.is-locked {
    position: relative;
}

.six-theme__swatch.is-locked::after {
    content: "Pro";
    position: absolute;
    right: 6px;
    top: 6px;
    font-size: 10px;
    background: rgba(0, 0, 0, .6);
    padding: 1px 5px;
    border-radius: 8px;
}

/* ensure background follows theme */
:root {
    --page-bg: var(--th-bg, #000);
}

body {
    background: var(--page-bg);
}

/* Live wallpaper host */
:root {
    --page-bg: var(--th-bg, #000);
}

html, body {
    background: var(--page-bg);
    transition: background-color .15s linear, color .15s linear;
}

/* When an animation is active we draw a compositor layer behind the app */
html[data-anim] {
    --page-bg: transparent;
}

html[data-anim]::before {
    content: "";
    position: fixed;
    inset: 0;
    z-index: -1;
    pointer-events: none;
    background: var(--th-bg, #000);
    will-change: transform, background-position, opacity;
    transform: translateZ(0);
}

/* Example CSS-only anims (the video ones are handled by JS already) */
html[data-anim="matrix"]::before {
    background: repeating-linear-gradient(180deg, #001, #002 8px);
    animation: sixBgScrollY 18s linear infinite;
}

html[data-anim="aquarium"]::before {
    background:
        radial-gradient(circle at 30% 20%, #0ff, #006),
        radial-gradient(circle at 70% 80%, #0f8, #004);
    animation: sixBgDrift 30s ease-in-out infinite alternate;
}

@keyframes sixBgScrollY {
    from {
        background-position: 0 0
    }

    to {
        background-position: 0 512px
    }
}

@keyframes sixBgDrift {
    from {
        transform: translate3d(-2%, 0, 0)
    }

    to {
        transform: translate3d(2%, 0, 0)
    }
}

@media (prefers-reduced-motion: reduce) {
    html[data-anim]::before {
        animation: none !important;
    }
}

/* slider */
/* === Theme panel: bigger sliders === */
.theme-panel input[type='range'] {
    --th-slider-h: 12px;
    /* track height */
    --th-slider-thumb: 22px;
    /* thumb size */
    --th-slider-radius: 9999px;

    -webkit-appearance: none;
    appearance: none;
    width: 100%;
    height: calc(var(--th-slider-thumb) + 10px);
    /* bigger hit area */
    background: transparent;
    margin: 6px 0 10px;
}

/* WebKit (Chrome/Safari/Edge) */
.theme-panel input[type='range']::-webkit-slider-runnable-track {
    height: var(--th-slider-h);
    background: var(--th-track, rgba(255, 255, 255, 0.18));
    border-radius: var(--th-slider-radius);
}

.theme-panel input[type='range']::-webkit-slider-thumb {
    -webkit-appearance: none;
    width: var(--th-slider-thumb);
    height: var(--th-slider-thumb);
    margin-top: calc((var(--th-slider-h) - var(--th-slider-thumb)) / 2);
    background: var(--th-thumb, #fff);
    border-radius: 50%;
    border: 2px solid rgba(0, 0, 0, 0.35);
    box-shadow: 0 1px 0 rgba(0, 0, 0, 0.25);
    cursor: pointer;
}

/* Firefox */
.theme-panel input[type='range']::-moz-range-track {
    height: var(--th-slider-h);
    background: var(--th-track, rgba(255, 255, 255, 0.18));
    border-radius: var(--th-slider-radius);
}

.theme-panel input[type='range']::-moz-range-thumb {
    width: var(--th-slider-thumb);
    height: var(--th-slider-thumb);
    background: var(--th-thumb, #fff);
    border-radius: 50%;
    border: 2px solid rgba(0, 0, 0, 0.35);
    box-shadow: 0 1px 0 rgba(0, 0, 0, 0.25);
    cursor: pointer;
}

/* Focus/keyboard accessibility */
.theme-panel input[type='range']:focus {
    outline: none;
}

.theme-panel input[type='range']:focus-visible::-webkit-slider-thumb {
    box-shadow: 0 0 0 4px rgba(255, 255, 255, 0.35);
}

.theme-panel input[type='range']:focus-visible::-moz-range-thumb {
    box-shadow: 0 0 0 4px rgba(255, 255, 255, 0.35);
}

/* Disabled state */
.theme-panel input[type='range']:disabled {
    opacity: .6;
    cursor: not-allowed;
}

/* base layer */
.live-root {
    position: fixed;
    inset: 0;
    pointer-events: none;
    z-index: 0;
    /* your header/content already has z-index > 0 */
}

/* keyframes */
@keyframes matrixFall {
    0% {
        transform: translate3d(0, -120vh, 0);
    }

    100% {
        transform: translate3d(0, 120vh, 0);
    }
}

/* streams */
.live-matrix .matrix-stream {
    position: absolute;
    top: -120vh;
    height: 240vh;
    background: linear-gradient(180deg,
            rgba(0, 255, 135, 0) 0%,
            rgba(0, 255, 135, 0.6) 30%,
            rgba(0, 255, 135, 0.95) 50%,
            rgba(0, 255, 135, 0.4) 70%,
            rgba(0, 255, 135, 0) 100%);
    filter: blur(0.2px);
    will-change: transform;
    animation-name: matrixFall;
    animation-timing-function: linear;
    animation-iteration-count: infinite;
    transform: translateZ(0);
    mix-blend-mode: screen;
}

/* respect reduced motion unless user explicitly chose an anim */
@media (prefers-reduced-motion: reduce) {
    .live-matrix .matrix-stream {
        animation: none;
    }
}

html.force-anim .live-matrix .matrix-stream {
    animation-play-state: running !important;
}

/* ===== Live animation – full-screen background video ===== */
:root[data-anim^="vid-"] {
    --page-bg: transparent !important;
    /* let the video show through */
}

#__six_bg_video__ {
    position: fixed;
    inset: 0;
    width: 100vw;
    height: 100vh;
    object-fit: cover;
    pointer-events: none;
    z-index: 0;
    /* place behind UI, but not behind <body> */
    opacity: 1;
    visibility: visible;

    /* keep playback smooth on iOS/Safari */
    transform: translateZ(0);
    backface-visibility: hidden;
}

/* Make sure your app UI is above the video (optional but helpful) */
.six-on-top,
.app-header,
.chat-list,
.composer-root {
    position: relative;
    z-index: 1;
}

/* ===== Live animation – thumbnails inside Theme panel ===== */
.six-theme__animCard video {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: cover;
    pointer-events: none;
    opacity: 1;
    visibility: visible;
}

/* optional: nicer active state */
.six-theme__animCard.is-active video {
    outline: 2px solid rgba(255, 255, 255, .35);
    outline-offset: -2px;
}

/* Hide native controls if any appear */
.six-theme__animCard video::-webkit-media-controls {
    display: none !important;
}

.msg-actions svg {
    fill: none;
    stroke: currentColor;
    stroke-linecap: round;
    stroke-linejoin: round
}

/* ---------- Ultra-gloss orb ---------- */
.landing-orb-wrap {
    width: fit-content;
    margin-inline: auto;
    display: grid;
    place-items: center;
    gap: 18px;
    /* space between orb and name */
}

/* subtle ground shadow */
.landing-orb-wrap::after {
    content: "";
    width: calc(var(--orb-size, 260px) * .65);
    height: calc(var(--orb-size, 260px) * .18);
    border-radius: 999px;
    background: radial-gradient(50% 100% at 50% 50%, rgba(0, 0, 0, .55), transparent 75%);
    filter: blur(6px);
    opacity: .35;
    transform: translateY(-6px);
}

/* glossy sphere with layered gradients + inner bevel */
.landing-orb {
    position: relative;
    width: var(--orb-size, 260px);
    height: var(--orb-size, 260px);
    border-radius: 50%;
    isolation: isolate;
    /* core shading */
    background:
        radial-gradient(115% 115% at 28% 28%, rgba(255, 255, 255, .96) 0%, rgba(255, 255, 255, .78) 26%, rgba(255, 255, 255, .30) 54%, rgba(255, 255, 255, .10) 64%, rgba(0, 0, 0, .38) 100%),
        radial-gradient(70% 70% at 68% 68%, rgba(0, 0, 0, .45) 0%, rgba(0, 0, 0, 0) 60%),
        radial-gradient(100% 100% at 50% 110%, rgba(0, 0, 0, .30) 0%, rgba(0, 0, 0, 0) 55%);
    box-shadow:
        inset 0 -28px 60px rgba(0, 0, 0, .45),
        /* bottom inner dark */
        inset 0 28px 60px rgba(255, 255, 255, .2),
        /* top inner light */
        0 12px 32px rgba(0, 0, 0, .35);
    /* world shadow */

    animation: orbWobble var(--orb-wobble-s, 4.2s) ease-in-out infinite;
}

/* specular glare */
.landing-orb::before {
    content: "";
    position: absolute;
    inset: 0;
    border-radius: 50%;
    background:
        radial-gradient(70% 45% at 32% 24%, rgba(255, 255, 255, .95) 0%, rgba(255, 255, 255, .75) 35%, rgba(255, 255, 255, 0) 70%);
    filter: blur(2px);
    mix-blend-mode: screen;
}

/* rim glint */
.landing-orb::after {
    content: "";
    position: absolute;
    inset: 2%;
    border-radius: 50%;
    background:
        radial-gradient(120% 120% at 70% 30%, rgba(255, 255, 255, .32) 0%, rgba(255, 255, 255, 0) 60%);
    pointer-events: none;
}

/* center label */
.orb-label {
    position: absolute;
    inset: 0;
    display: grid;
    place-items: center;
    font-weight: 700;
    letter-spacing: .08em;
    font-size: clamp(16px, 2.4vw, 22px);
    color: rgba(0, 0, 0, .55);
    text-shadow: 0 1px 0 rgba(255, 255, 255, .5), 0 -1px 0 rgba(255, 255, 255, .25);
}

/* wobble motion */
@keyframes orbWobble {
    0% {
        transform: translateY(0) rotate(0.0001deg);
    }

    50% {
        transform: translateY(-4px) rotate(0.0001deg);
    }

    100% {
        transform: translateY(0) rotate(0.0001deg);
    }
}

/* ---------- Name line under the orb ---------- */
.orb-name-marquee {
    position: relative;
    display: inline-block;
    line-height: 1.1;
    font-weight: 800;
    font-size: clamp(14px, 1.8vw, 18px);
    letter-spacing: .14em;
    text-transform: uppercase;
    /* base color switches with theme */
    color: var(--orb-name-base, #111);
}

/* base text (static) */
.orb-name-base {
    position: relative;
    z-index: 1;
}

/* animated ink highlight overlay */
.orb-name-ink {
    position: absolute;
    inset: 0;
    z-index: 2;
    color: transparent;
    background-size: 220% 100%;
    background-position: -40% 50%;
    -webkit-background-clip: text;
    background-clip: text;
    animation: orbInk var(--orb-name-s, 5s) linear infinite;
    /* soften edges of the sweep */
    mask-image: linear-gradient(90deg, transparent 0%, black 12%, black 88%, transparent 100%);
}

/* LIGHT mode palette */
:root {
    --orb-name-base: #111;
    --orb-ink-1: #ffffff;
    --orb-ink-2: #d0d0d0;
}

.orb-name-ink {
    background-image: linear-gradient(90deg,
            transparent,
            var(--orb-ink-1) 25%,
            var(--orb-ink-2) 50%,
            var(--orb-ink-1) 75%,
            transparent);
}

/* DARK mode overrides (supports system + many theme libs) */
@media (prefers-color-scheme: dark) {
    :root {
        --orb-name-base: #ffffff;
        --orb-ink-1: #ffffff;
        --orb-ink-2: #aeb2b7;
        /* silver */
    }

    .orb-label {
        color: rgba(255, 255, 255, .82);
        text-shadow: 0 1px 0 rgba(0, 0, 0, .35);
    }
}

/* if your ThemeProvider toggles a data-theme, support it too */
:root[data-theme="dark"], .dark :root {
    --orb-name-base: #ffffff;
    --orb-ink-1: #ffffff;
    --orb-ink-2: #aeb2b7;
}

/* sweep left -> right */
@keyframes orbInk {
    0% {
        background-position: -40% 50%;
    }

    100% {
        background-position: 140% 50%;
    }
}

/* ===== Orb name line (under the orb) ===== */

.landing-orb-wrap {
    display: grid;
    place-items: center;
    gap: 12px;
    /* keeps the text under the orb */
}

/* container for the two layered texts */
.orb-name-marquee {
    position: relative;
    line-height: 1;
    text-transform: uppercase;
    letter-spacing: .18em;
    font-weight: 800;
    text-align: center;
    /* responsive size */
    font-size: clamp(14px, 3vw, 22px);
}

/* base text color flips with theme */
.orb-name-base {
    display: block;
}

html.theme-dark .orb-name-base {
    color: #fff;
}

html.theme-light .orb-name-base {
    color: #000;
}

/* moving “ink” layer on top; revealed by an animated mask */
.orb-name-ink {


    /* animated reveal window */
    -webkit-mask-image: linear-gradient(90deg,
            transparent 50%,
            #000 18%,
            #000 82%,
            transparent 100%);
    mask-image: linear-gradient(90deg,
            transparent 50%,
            #000 18%,
            #000 82%,
            transparent 100%);
    -webkit-mask-size: 220% 100%;
    mask-size: 220% 100%;
    -webkit-mask-position: -120% 50%;
    mask-position: -120% 50%;
    animation: orbNameSweep var(--orb-name-s, 20s) linear infinite;
    will-change: mask-position, -webkit-mask-position;
}

/* theme-aware ink color (black ink on dark, white ink on light) */
html.theme-dark .orb-name-ink {
    --orb-ink: #000;
    text-shadow: 0 1px 0 rgba(255, 255, 255, .08);
}

html.theme-light .orb-name-ink {
    --orb-ink: #fff;
    text-shadow: 0 1px 0 rgba(0, 0, 0, .08);
}

@keyframes orbNameSweep {
    from {
        -webkit-mask-position: -120% 50%;
        mask-position: -120% 50%;
    }

    to {
        -webkit-mask-position: 220% 50%;
        mask-position: 220% 50%;
    }
}

/* Centered, embossed label on the orb */
.landing-orb {
    position: relative;
}

.orb-label {
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    pointer-events: none;
    user-select: none;
    text-transform: uppercase;
    font-weight: 900;
    letter-spacing: .28em;
    font-size: clamp(12px, calc(var(--orb-size, 320px) / 10), 26px);
    opacity: .95;
}

/* Deep gray in dark mode, carved into the sphere */
html.theme-dark .orb-label {
    color: #2c2c2c;
    mix-blend-mode: multiply;
    /* melts into the orb */
    text-shadow:
        1px 1px 0 rgba(255, 255, 255, .32),
        /* upper ridge highlight */
        -1px -1px 0 rgba(0, 0, 0, .45),
        /* inner cut shadow */
        0 2px 6px rgba(0, 0, 0, .35);
    /* soft depth */
}

/* White in light mode, same engraved feel */
html.theme-light .orb-label {
    color: #ffffff;
    text-shadow:
        1px 1px 0 rgba(0, 0, 0, .35),
        /* groove on lower-right */
        -1px -1px 0 rgba(255, 255, 255, .55),
        0 2px 6px rgba(0, 0, 0, .25);
}

/* moving “ink” layer on top; BLACK/WHITE border that matches bg */
.orb-name-ink {
    position: absolute;
    inset: 0;
    display: block;
    pointer-events: none;

    /* ink fill color (opposite of the base) */
    color: var(--orb-ink);
    -webkit-text-fill-color: var(--orb-ink);

    /* make the border match the page background */
    -webkit-text-stroke: var(--orb-stroke-w, 0.5px) var(--orb-stroke);
    text-shadow: none !important;
    /* kill the halo */
    mix-blend-mode: normal;
    /* no extra blending */

    /* animated reveal window (kept from your code) */
    -webkit-mask-image: linear-gradient(90deg, transparent 0%, #000 18%, #000 82%, transparent 100%);
    mask-image: linear-gradient(90deg, transparent 0%, #000 18%, #000 82%, transparent 100%);
    -webkit-mask-size: 220% 100%;
    mask-size: 220% 100%;
    -webkit-mask-position: -120% 50%;
    mask-position: -120% 50%;
    animation: orbNameSweep var(--orb-name-s, 20s) linear infinite;
    will-change: mask-position, -webkit-mask-position;
}

/* theme-aware ink + stroke (border matches background) */
html.theme-dark .orb-name-ink {
    --orb-ink: #000;
    --orb-stroke: #000;
}

html.theme-light .orb-name-ink {
    --orb-ink: #fff;
    --orb-stroke: #fff;
}


/* base stays fully transparent */
.orb-name-base {
    color: transparent !important;
    -webkit-text-fill-color: transparent !important;
    -webkit-text-stroke: 0 !important;
    text-shadow: none !important;
}

/* single moving reveal band; we use two layers but show only one at a time */
.orb-name-ink {
    position: absolute;
    inset: 0;
    pointer-events: none;

    color: transparent !important;
    -webkit-text-fill-color: transparent !important;
    -webkit-text-stroke: 0 !important;
    text-shadow: none !important;

    -webkit-mask: none !important;
    mask: none !important;

    /* two identical bands (only one is visible during each half-cycle) */
    background:
        linear-gradient(90deg,
            transparent 0%,
            transparent 40%,
            var(--reveal-color, #fff) 50%,
            transparent 60%,
            transparent 100%) no-repeat,
        linear-gradient(90deg,
            transparent 0%,
            transparent 40%,
            var(--reveal-color, #fff) 50%,
            transparent 60%,
            transparent 100%) no-repeat;

    background-size: 220% 100%, 220% 100%;
    /* start: first band off-left, second off-right */
    background-position: -110% 0, 110% 0;

    -webkit-background-clip: text;
    background-clip: text;

    animation: orbNameL2R var(--orb-name-s, 20s) linear infinite;
    will-change: background-position;
}

/* white on dark, black on light */
html.theme-dark .orb-name-ink {
    --reveal-color: #fff;
}

html.theme-light .orb-name-ink {
    --reveal-color: #000;
}

@keyframes orbNameL2R {

    /* 1) band A sweeps L→R while band B waits off-right */
    0% {
        background-position: -110% 0, 110% 0;
    }

    50% {
        background-position: 110% 0, 110% 0;
    }

    /* 2) instant reset off-screen (both invisible, so no flick) */
    50.01% {
        background-position: -110% 0, -110% 0;
    }

    /* 3) band B sweeps L→R while band A waits off-left */
    100% {
        background-position: -110% 0, 110% 0;
    }
}

/* Rounded, softly pulsing image skeleton */
.img-skel {
    background: radial-gradient(120% 140% at 30% 20%, rgba(255, 255, 255, 0.09), rgba(255, 255, 255, 0.04) 40%, rgba(255, 255, 255, 0.02) 70%, transparent);
}

.skel-fade {
    animation: skelFade 1.5s ease-in-out infinite;
    border-radius: 16px;
}

@keyframes skelFade {
    0%, 100% {
        opacity: .55;
    }

    50% {
        opacity: .85;
    }
}

/* HUD typing dots (for the overlay chip) */
.hud-dot {
    width: 4px;
    height: 4px;
    border-radius: 9999px;
    background: currentColor;
    display: inline-block;
    margin-left: 3px;
    opacity: .6;
    animation: hudPulse 1.2s infinite;
}

.hud-dot:nth-child(2) {
    animation-delay: .2s;
}

.hud-dot:nth-child(3) {
    animation-delay: .4s;
}

@keyframes hudPulse {
    0%, 100% {
        transform: translateY(0);
        opacity: .6;
    }

    50% {
        transform: translateY(-2px);
        opacity: .95;
    }
}

@keyframes six-shimmer {
    0% {
        transform: translateX(-100%);
    }

    100% {
        transform: translateX(100%);
    }
}

.skeleton-shimmer {
    position: absolute;
    inset: 0;
    background: linear-gradient(90deg,
            rgba(255, 255, 255, 0.03) 0%,
            rgba(255, 255, 255, 0.10) 50%,
            rgba(255, 255, 255, 0.03) 100%);
    animation: six-shimmer 1.2s infinite;
}

/* ========== Force outline-only icons in chat actions ========== */
.msg-actions {
    color: var(--icon-fg, rgba(255, 255, 255, .9));
}

/* Normalize size/hover feel to match Image flow */
.msg-actions .icon-btn {
    height: 28px;
    width: 28px;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    border-radius: 10px;
    background: transparent;
    transition: opacity .15s ease, transform .08s ease, background .15s ease;
}

.msg-actions .icon-btn:hover {
    background: var(--th-surface, rgba(255, 255, 255, .06));
}

.msg-actions .icon-btn:active {
    transform: scale(.97);
}

/* Kill any fills coming from icon libraries and enforce strokes */
.msg-actions .icon-btn svg,
.msg-actions .icon-btn svg * {
    fill: none !important;
}

.msg-actions .icon-btn svg {
    width: 18px;
    height: 18px;
    stroke: currentColor !important;
    stroke-width: 1.8px !important;
    stroke-linecap: round !important;
    stroke-linejoin: round !important;
    vector-effect: non-scaling-stroke;
}

/* Some libs set fill colors inline (#fff / rgb / etc.) — nuke them */
.msg-actions .icon-btn svg [fill^="#"],
.msg-actions .icon-btn svg [fill^="rgb"],
.msg-actions .icon-btn svg [fill="currentColor"] {
    fill: none !important;
}

/* Some libs set stroke="none" — re-enable */
.msg-actions .icon-btn svg [stroke="none"] {
    stroke: currentColor !important;
}

/* Optional: “active” colors still via stroke (not fill) */
.msg-actions .icon-btn.is-like.active,
.msg-actions .icon-btn[aria-pressed="true"].is-like {
    color: var(--ok, #16a34a);
}

.msg-actions .icon-btn.is-dislike.active,
.msg-actions .icon-btn[aria-pressed="true"].is-dislike {
    color: var(--bad, #e11d48);
}

/* Light mode legibility */
@media (prefers-color-scheme: light) {
    .msg-actions {
        color: rgba(15, 15, 15, .9);
    }

    .msg-actions .icon-btn:hover {
        background: rgba(0, 0, 0, .06);
    }
}

/* 6ix.css */
.floating-composer .composer-ticker {
    border: 1px solid rgba(255, 255, 255, .12);
    background: rgba(255, 255, 255, .06);
    backdrop-filter: blur(8px);
    border-radius: 10px;
    margin-bottom: 6px;
}

/* Wrap long code/links without blowing out width */
.msg-body pre,
.msg-body code {
    white-space: pre-wrap;
    word-break: break-word;
}

/* Composer: truly fixed to bottom; fills width safely */
.floating-composer {
    position: fixed;
    left: 0;
    right: 0;
    bottom: calc(var(--mbnav-h, 0px) + env(safe-area-inset-bottom, 0px));
    z-index: 40;
}

/* Bottom nav: fixed under the composer */
.mobile-bottom-nav {
    position: fixed;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 35;
}

/* When you hide the bottom nav, make its height zero so we don't reserve space */
.mobile-bottom-nav[aria-hidden="true"] {
    height: 0 !important;
}

/* Media inside bubbles never forces sideways scroll */
.chat-bubble img,
.chat-bubble video,
.chat-bubble canvas,
.chat-bubble iframe {
    max-width: 100%;
    height: auto;
    display: block;
}

/* ===== App shell: page never scrolls; only chat list does ===== */
html, body {
    height: 100%;
    width: 100%;
    max-width: 100%;
    overflow: hidden;
    /* stop page scroll */
    overscroll-behavior: none;
    /* stop iOS bounce interactions */
}

#app-shell.app-shell {
    position: fixed;
    inset: 8;
    display: grid;
    grid-template-rows: var(--header-h, 56px) 1fr;
}

/* Header is fixed (see markup tweak above) */
.app-header {
    height: var(--header-h, 56px);
}

/* Main area under the header */
.app-main {
    grid-row: 2 / -1;
    position: relative;
    height: 100%;
}

/* Only this scrolls */
.chat-scroll {
    position: absolute;
    inset: 0;
    overflow-y: auto;
    -webkit-overflow-scrolling: touch;
    overscroll-behavior-y: contain;
    overscroll-behavior-x: none;
    scrollbar-gutter: stable both-edges;
    /* prevents content shift when showing scrollbar */
    padding-top: 8px;
    /* small gap below header */
    padding-bottom: calc(var(--composer-h, 64px) + var(--mbnav-h, 0px) + env(safe-area-inset-bottom, 0px));
}

/* Remove ANY horizontal wiggle */
:where(html, body, #__next, #app-shell, .app-main, .chat-scroll) {
    max-width: 100%;
    overflow-x: clip;
}

:where(.w-screen, [style*="width: 100vw"]) {
    width: 100% !important;
}

/* Composer and mobile nav are fixed and layered correctly */
.floating-composer {
    position: fixed;
    left: 0;
    right: 0;
    bottom: calc(env(safe-area-inset-bottom, 0px) + var(--mbnav-h, 0px));
    z-index: 60;
    pointer-events: auto;
}

/* Kill any dark fade shim that sits above chat */
.floating-composer::before,
.floating-composer::after {
    content: none !important;
}

.mobile-bottom-nav {
    position: fixed;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 50;
    /* under composer */
    width: auto;
    max-width: 100%;
    overflow-x: hidden;
}

/* Chat list spacing & text wrapping */
.chat-list {
    gap: 14px;
    padding: 0 12px;
}

.chat-bubble pre, .chat-bubble code {
    white-space: pre-wrap;
    word-break: break-word;
}

/* ===== 6IX — SHELL v2 (single source of truth) ===== */
:root {
    --hdr-h: 64px;
    /* header height */
    --composer-h: 84px;
    /* measured composer height */
    --mbnav-h: 0px;
    /* updated by JS if your bottom nav is visible */
    --gutter: 16px;
    /* side padding for chat (mobile-safe) */
}

/* Page never scrolls. Only the chat scroller moves. No sideways pan. */
html, body {
    height: 100%;
    overflow: hidden !important;
    overscroll-behavior: none !important;
    touch-action: pan-y pinch-zoom !important;
    max-width: 100%;
}

/* Hard kill any horizontal wiggle anywhere */
:where(html, body, #__next, .ai-shell, #app-shell, .app-main, .chat-scroll) {
    max-width: 100% !important;
    overflow-x: clip !important;
}

/* App shell: fixed to viewport */
.ai-shell, #app-shell.app-shell {
    position: fixed !important;
    inset: 0 !important;
}

/* Header: fixed, no “liner”, no extra dark pad */
.app-header {
    position: fixed !important;
    top: 0;
    left: 0;
    right: 0;
    height: var(--header-h);
    z-index: 120;
    background: transparent !important;
    -webkit-backdrop-filter: none !important;
    backdrop-filter: none !important;
}

/* Main area sits exactly under the fixed header */
.app-main {
    position: absolute;
    inset: var(--header-h) 0 0 0;
}

/* The ONLY scroller */
.chat-scroll {
    position: absolute;
    inset: 0;
    overflow-y: auto !important;
    overflow-x: hidden !important;
    -webkit-overflow-scrolling: touch;
    overscroll-behavior-x: none !important;
    padding:
        8px
        /* top */
        var(--gutter)
        /* sides (safe gutters) */
        calc(var(--composer-h) + var(--mbnav-h) + env(safe-area-inset-bottom, 0px) + 8px);
    /* bottom */
    scroll-padding-bottom: calc(var(--composer-h) + var(--mbnav-h) + env(safe-area-inset-bottom, 0px) + 8px);
}

/* Inner chat list can keep its own gap; ensure no extra horizontal padding elsewhere */
.chat-list {
    padding-inline: 0 !important;
    gap: 14px;
}

/* Bubbles: one line first; wrap only when needed; never touch edges */
.chat-bubble,
.msg-body {
    display: inline-block;
    width: auto;
    min-width: max-content;
    /* keep short messages on one line */
    white-space: normal;
    /* allow natural wrapping when needed */
    word-break: normal;
    overflow-wrap: break-word;
    /* Max bubble width = viewport minus side gutters */
    max-width: min(calc(100vw - (var(--gutter) * 2)), 680px);
}

/* Smaller bubble width / bigger gutters on tiny screens */
@media (max-width: 480px) {
    :root {
        --gutter: 18px;
    }

    .chat-bubble, .msg-body {
        max-width: calc(100vw - (var(--gutter) * 2));
    }
}

/* Media inside bubbles never creates sideways scroll */
.chat-bubble img,
.chat-bubble video,
.chat-bubble canvas,
.chat-bubble iframe {
    max-width: 100%;
    height: auto;
    display: block;
}

/* Composer + bottom nav are fixed; only chat moves */
.floating-composer {
    position: fixed !important;
    left: 0;
    right: 0;
    bottom: calc(env(safe-area-inset-bottom, 0px) + var(--mbnav-h, 0px) + 10px);
    /* nudged up a bit */
    z-index: 80;
}

/* Bottom nav pinned to bottom (under composer if present) */
.mobile-bottom-nav {
    position: fixed !important;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 75;
    max-width: 100%;
    overflow-x: hidden;
}

/* Strip any accidental bottom overlays on the composer */
.floating-composer::before,
.floating-composer::after {
    content: none !important;
}

/* Bubble sizing — narrower on mobile, never hugs the edges */
:root {
    --bubble-max-mobile: 82vw;
    /* was ~92% — this is the shrink */
    --bubble-max-desktop: 640px;
    /* cap for large screens */
    --bubble-side-gap: 10px;
    /* visual breathing room */
}

.chat-bubble,
.msg-body {
    display: inline-block;
    max-width: min(var(--bubble-max-mobile), var(--bubble-max-desktop)) !important;
    width: max-content;
    /* grow to content up to max */
    min-width: 44px;
    /* tiny single-word bubbles look nice */
    margin-inline: var(--bubble-side-gap);
    line-height: 1.35;
    white-space: pre-wrap;
    /* keep newlines; one-line if short */
    overflow-wrap: break-word;
    /* wrap long words/links */
    word-break: normal;
    /* don’t split letters */
    border-radius: 16px;
}

/* Slightly wider on tablets/desktops, still not edge-to-edge */
@media (min-width: 768px) {
    :root {
        --bubble-max-mobile: 70vw;
    }
}

/* Absolutely kill horizontal scroll anywhere */
html, body, #app-shell, .app-main, .chat-scroll, .chat-list {
    max-width: 100%;
    overflow-x: hidden !important;
}

/* If any utility injects 100vw widths, normalize them */
:where([style*="width: 100vw"], .w-screen) {
    width: 100% !important;
}

/* --- Nuke the header tint/blur everywhere (mobile + desktop) --- */
.app-header {
    background: transparent !important;
    border: 0 !important;
    -webkit-backdrop-filter: none !important;
    backdrop-filter: none !important;
    box-shadow: none !important;
}

/* wipe theme variants too */
.theme-dark .app-header,
.theme-light .app-header {
    background: transparent !important;
    border-color: transparent !important;
}

/* just in case any pseudo paints were added */
.app-header::before,
.app-header::after {
    content: none !important;
}

/* ===== 6IX PATCH: no auto zoom, transparent header, narrower bubbles ===== */

/* 1) iOS Safari: prevent auto-zoom when focusing inputs (needs >=16px) */
input, textarea, select, button,
.composer-root input, .composer-root textarea {
    font-size: 17px !important;
    /* 17 to be extra-safe on iOS */
}

html {
    -webkit-text-size-adjust: 100% !important;
}

/* 2) Make the header 100% clear (no tint, no blur, no border) */
.app-header {
    background: transparent !important;
    border: 0 !important;
    -webkit-backdrop-filter: none !important;
    backdrop-filter: none !important;
    box-shadow: none !important;
}

.app-header::before,
.app-header::after {
    content: none !important;
}

/* nuke any stray borders/tints added by inner header rows/components */
.app-header * {
    border-color: transparent !important;
}

/* 3) Narrow the chat bubbles so they never hit the screen edge */
:root {
    --bubble-max: min(82%, 620px);
}

/* tweak % if you want tighter */
.chat-bubble, .msg-body {
    max-width: var(--bubble-max) !important;
    width: max-content;
    overflow-wrap: break-word;
    word-break: normal;
}

/* Keep the chat column centered and remove any sideways wiggle */
.chat-list {
    padding-inline: 12px !important;
}

:where(html, body, #__next, #app-shell, .app-main, .chat-scroll) {
    max-width: 100% !important;
    overflow-x: clip !important;
}

/* Composer should not add dark veils */
.floating-composer::before,
.floating-composer::after {
    display: none !important;
}

/* Bottom nav: reduce vertical padding a bit */
.mobile-bottom-nav {
    padding: 2px 8px env(safe-area-inset-bottom, 4px) !important;
}

/* --- AI page header overlap fixes (global) --- */

/* Keep visual backgrounds behind the header */
.ai-bg,
.landing-orb,
.history-mask,
.modal-overlay {
    z-index: 0 !important;
}

/* Make sure the fixed AppHeader always wins */
.app-header {
    z-index: 60 !important;
    /* overrides Tailwind z-40 on the component */
}

/* Remove accidental seam between header and chat */
[data-chat-root] {
    border-top: none !important;
    box-shadow: none !important;
}

/* Light/Dark: match page top to header so there’s no visible edge */
@media (prefers-color-scheme: light) {

    .chat-list,
    [data-chat-root] {
        background-color: #fafafa;
    }
}

@media (prefers-color-scheme: dark) {

    .chat-list,
    [data-chat-root] {
        background-color: #0b0b0c;
    }
}



/* Make sure the chat surface honors the header height even before JS runs */
.chat-list, [data-chat-root] {
    padding-top: calc(var(--header-h, 56px) + env(safe-area-inset-top, 0px));
}

/* If any ancestor had overflow clipping, don't clip the fixed header */
.ai-shell, .ai-page, .chat-scroll {
    overflow: visible;
}

/* Let image taps reach the button inside ImageBubble */
.img-card-toolbar,
.image-overlay-toolbar {
    pointer-events: none !important;
}

.img-card-toolbar>*,
.image-overlay-toolbar>* {
    pointer-events: auto !important;
}

/* Desktop-only chat scrolling */
@media (min-width: 1024px) {
    .app-main {
        display: flex;
        flex: 1;
        min-height: 0;
    }

    /* allow child to actually shrink */
    .chat-scroll {
        overscroll-behavior: contain;
        scroll-behavior: smooth;
        height: auto;
        /* we govern with max-height var */
        max-height: var(--chat-max-h);
    }

    /* keep first/last bubbles fully visible near edges */
    .chat-scroll>.mx-auto {
        scroll-margin-top: var(--chat-pad-top, 56px);
    }
}

/* Lock the page – only the chat list may scroll */
html, body, #__next {
    height: 100%;
}

html, body {
    overflow: hidden !important;
    overscroll-behavior: none;
}

/* The app shell already uses fixed/inset-0, make sure no extra scroll appears */
.ai-shell {
    position: fixed;
    inset: 0;
    display: flex;
    flex-direction: column;
    overflow: hidden;
}

/* Let the main area flex and prevent its own scroll */
.app-main {
    flex: 1;
    min-height: 0;
    display: flex;
}

/* The ONLY scrollable area */
.chat-scroll {
    flex: 1;
    min-height: 0;
    overflow-y: auto;
    overflow-x: hidden;
    overscroll-behavior: contain;
    scroll-behavior: smooth;
}

/* Center the thread and give it equal left/right padding so it doesn’t hug the left */
.chat-scroll>.mx-auto {
    margin-inline: auto;
    width: 100%;
    max-width: 980px;
    /* was 900; stretch a bit more on desktop */
    padding-inline: 16px;
}

/* Keep the list clear of header & composer using the vars your effect sets */
.chat-scroll {
    padding-top: var(--chat-pad-top, 56px);
    padding-bottom: var(--chat-pad-bottom, 96px);
    scroll-padding-top: var(--chat-pad-top, 56px);
    scroll-padding-bottom: var(--chat-pad-bottom, 96px);
    max-height: var(--chat-max-h, 100dvh);
}

/* iOS “rubber band” prevention while still letting chat scroll */
@supports (-webkit-touch-callout: none) {
    body {
        position: fixed;
        width: 100%;
    }
}

/* Remove any flex gaps / margins between header and main */
.ai-shell {
    gap: 0 !important;
}

.app-main {
    margin-top: 0 !important;
}

/* Some builds give the header a bottom margin/padding — neutralize it */
.app-header, [data-app-header] {
    margin-bottom: 0 !important;
    padding-bottom: 0 !important;
}

/* Chat is the ONLY scroll area; page itself doesn't scroll */
html, body {
    overflow: hidden !important;
}

.ai-shell, .app-main {
    overflow: hidden;
}

/* Chat list sits flush under the header; padding is driven by JS vars */
.chat-scroll {
    overflow-y: auto;
    overflow-x: hidden;
    scroll-behavior: smooth;
    padding-top: var(--chat-pad-top, 0px);
    padding-bottom: var(--chat-pad-bottom, 96px);
    scroll-padding-top: var(--chat-pad-top, 0px);
    scroll-padding-bottom: var(--chat-pad-bottom, 96px);
}

/* === 6IX HOTFIX — put at the very end of 6ix.css === */

/* Page never scrolls */
html, body {
    height: 100%;
    overflow: hidden !important;
    overscroll-behavior: none !important;
    max-width: 100%;
}

/* App shell pinned to viewport (fix the stray "inset: 8") */
#app-shell.app-shell,
.ai-shell {
    position: fixed !important;
    inset: 0 !important;
    overflow: hidden !important;
}

.ai-page {
    overflow: hidden !important;
}

/* Header floats with NO seam/border/shadow */
.app-header,
.theme-dark .app-header,
.theme-light .app-header {
    background: transparent !important;
    border: 0 !important;
    box-shadow: none !important;
}

.app-header::before,
.app-header::after {
    content: none !important;
}

/* If you mount a "header-flow" bar anywhere, kill its border line */
.header-flow {
    border-top: 0 !important;
}

/* Main sits exactly under the header */
.app-main {
    position: absolute !important;
    inset: var(--header-h, 56px) 0 0 0 !important;
    overflow: hidden !important;
}

/* The ONLY scrollable area */
.chat-scroll {
    position: absolute !important;
    inset: 0 !important;
    overflow-y: auto !important;
    overflow-x: hidden !important;
    scroll-behavior: smooth;
    padding-top: var(--chat-pad-top, 0px) !important;
    padding-bottom: var(--chat-pad-bottom, 96px) !important;
    scroll-padding-top: var(--chat-pad-top, 0px) !important;
    scroll-padding-bottom: var(--chat-pad-bottom, 96px) !important;
    scrollbar-gutter: stable both-edges;
}

/* Nuke the duplicate top pad that created the gap */
.chat-list,
[data-chat-root] {
    padding-top: 0 !important;
    margin-top: 0 !important;
    border-top: 0 !important;
    box-shadow: none !important;
}

/* Stretch the chat column on desktop and keep it centered */
.chat-scroll>.mx-auto {
    margin-inline: auto;
    width: 100%;
    max-width: 980px;
    /* lets the right side stretch */
    padding-inline: 16px;
}

/* Sticky generator toolbar should not reserve extra space */
.gen-wrap {
    position: sticky;
    top: var(--chat-pad-top, var(--header-h, 56px)) !important;
    /* remove +8px */
    z-index: 1;
}

/* Guard: absolutely kill accidental horizontal scrollbars anywhere */
:where(html, body, #__next, #app-shell, .app-main, .chat-scroll) {
    max-width: 100% !important;
    overflow-x: clip !important;
}

:where([style*="width: 100vw"], .w-screen) {
    width: 100% !important;
}

/* iOS rubber-band fix while still allowing the chat to scroll */
@supports (-webkit-touch-callout: none) {
    body {
        position: fixed;
        width: 100%;
    }
}

/* === 6IX FIX — single scroller, no seam under header (desktop+mobile) === */

/* 0) Make the header height token consistent everywhere */
:root {
    --header-h: var(--hdr-h, 64px) !important;
}

/* 1) Page never scrolls; app shell fills viewport with zero inset */
html, body {
    overflow: hidden !important;
    height: 100% !important;
}

#app-shell.app-shell, .ai-shell {
    position: fixed !important;
    inset: 0 !important;
    overflow: hidden !important;
}

/* 2) Main area sits exactly under the fixed header */
.app-header {
    z-index: 120;
}

/* keep it above */
.app-main {
    position: fixed !important;
    top: var(--header-h, 56px) !important;
    left: 0;
    right: 0;
    bottom: 0;
    margin: 0 !important;
    overflow: hidden !important;
}

/* 3) The ONLY scroller (flush to top, no extra top padding) */
.chat-scroll {
    position: absolute !important;
    inset: 0 !important;
    overflow-y: auto !important;
    overflow-x: hidden !important;
    padding-top: 0 !important;
    /* ← kill extra gap */
    padding-bottom: calc(var(--composer-h, 84px) + var(--mbnav-h, 0px) + env(safe-area-inset-bottom, 0px)) !important;
    scroll-padding-top: 0 !important;
    scroll-padding-bottom: calc(var(--composer-h, 84px) + var(--mbnav-h, 0px) + env(safe-area-inset-bottom, 0px)) !important;
}

/* 4) Remove any other top padding/borders that were adding a seam */
.chat-list, [data-chat-root] {
    padding-top: 0 !important;
    margin-top: 0 !important;
    border-top: 0 !important;
    box-shadow: none !important;
}

.header-flow {
    border-top: 0 !important;
}

/* ← kills the thin grey line */
.app-header, .app-header * {
    border-bottom: none !important;
    box-shadow: none !important;
}

/* 5) Make sure the thread container spans correctly (no left bias) */
.chat-scroll>.mx-auto {
    margin-inline: auto !important;
    width: 100% !important;
    max-width: 980px;
    /* tweak if you want wider */
    padding-inline: 16px;
}

/* 6) Safety: no rogue 8px inset from older rule */
#app-shell.app-shell {
    inset: 0 !important;
}

/* overrides the earlier `inset: 8;` */
/* ===== 6IX — header + chat alignment (final overrides) ===== */

/* 1) One token for header height (player + plan pills included) */
:root {
    --header-h: 132px;
    /* tune if your pills wrap */
    --hdr-h: var(--header-h);
    /* alias older token so both paths match */
}

@media (max-width: 480px) {
    :root {
        --header-h: 144px;
    }

    /* a touch taller on small phones */
}

/* 2) Header: fixed + extend its glass down to cover the pills */
.app-header {
    position: fixed !important;
    inset: 0 0 auto 0;
    height: var(--header-h) !important;
    z-index: 120;
    background: rgba(14, 14, 14, .82) !important;
    -webkit-backdrop-filter: blur(14px) !important;
    backdrop-filter: blur(14px) !important;
    border: 0 !important;
    box-shadow: none !important;
}

/* (optional safety) extend the glass a few pixels below in case of rounding */
.app-header::after {
    content: "";
    position: absolute;
    left: 0;
    right: 0;
    bottom: -12px;
    height: 12px;
    background: inherit;
    -webkit-backdrop-filter: inherit;
    backdrop-filter: inherit;
    pointer-events: none;
}

/* Keep the pills inside the same padded band as the music pill */
.app-header .header-pills {
    padding-inline: 16px !important;
    margin-top: 8px !important;
}

/* 3) Main area starts exactly under the header */
.app-main {
    position: absolute !important;
    top: var(--header-h) !important;
    left: 0;
    right: 0;
    bottom: 0;
    overflow: hidden !important;
}

/* 4) ONLY chat scrolls, and it sits flush under the header */
.chat-scroll {
    position: absolute;
    inset: 0;
    overflow-y: auto !important;
    overflow-x: hidden !important;
    padding-top: 8px !important;
    /* tiny breathing room under header */
    padding-bottom: calc(var(--composer-h, 84px) + var(--mbnav-h, 0px) + env(safe-area-inset-bottom, 0px)) !important;
    scroll-padding-top: 8px !important;
}

/* nuke any extra top padding that was being added elsewhere */
.chat-list, [data-chat-root] {
    padding-top: 90px !important;
    padding-bottom: -8px !important;
}

/* 5) Kill the faint gray line/divider under the header */
.header-flow {
    border-top: 8px !important;
    box-shadow: none !important;
}

.app-header, .app-header * {
    border-bottom: 8px !important;
    box-shadow: none !important;
}

/* 6) No page scroll at all */
html, body {
    height: 100%;
    overflow: hidden !important;
    overscroll-behavior: none !important;
}

/* === 6IX “no bottom gap” patch (desktop + mobile) === */

/* Composer sits on the bottom (no extra lift) */
.floating-composer {
    bottom: calc(env(safe-area-inset-bottom, 0px) + var(--mbnav-h, 0px)) !important;
    margin: 0 !important;
}

/* Kill any spacing inside the composer stack */
.floating-composer .composer-ticker {
    margin-bottom: 0px !important;
}

/* The ONLY bottom padding for the chat is the composer height */
:root {
    --chat-pad-bottom: calc(var(--composer-h, 84px) + var(--mbnav-h, 0px) + env(safe-area-inset-bottom, 0px));
}

.chat-scroll {
    padding-bottom: var(--chat-pad-bottom) !important;
    scroll-padding-bottom: var(--chat-pad-bottom) !important;
}

/* Safety: if any other block set a fixed 96px or similar, zero it */
:root {
    --chat-max-h: 100dvh !important;
}